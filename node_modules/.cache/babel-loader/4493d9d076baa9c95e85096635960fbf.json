{"ast":null,"code":"import { GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL, UPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL, RESET_CALENDAR } from \"./actionTypes\";\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {}\n};\n\nconst Calendar = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return { ...state,\n        events: action.payload\n      };\n\n    case GET_EVENTS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case ADD_EVENT_SUCCESS:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case ADD_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.map(event => event.id.toString() === action.payload.id.toString() ? {\n          event,\n          ...action.payload\n        } : event),\n        isEventUpdated: true\n      };\n\n    case UPDATE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.filter(event => event.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case GET_CATEGORIES_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case RESET_CALENDAR:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      var flags = {};\n      flags[flag] = value;\n      return { ...state,\n        ...flags\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/store/calendar/reducer.js"],"names":["GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","RESET_CALENDAR","INIT_STATE","events","categories","error","Calendar","state","action","type","payload","map","event","id","toString","isEventUpdated","filter","flag","value","flags"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,iBARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,cAXF,QAYO,eAZP;AAcA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAnB;;AAMA,MAAMC,QAAQ,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBL,UAAuB;AAAA,MAAXM,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,kBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAKF,SAAKlB,eAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACE,OAAzB;AAFH,OAAP;;AAKF,SAAKhB,cAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKf,oBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaQ,GAAb,CAAiBC,KAAK,IAC5BA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAAxB,GACI;AAAEF,UAAAA,KAAF;AAAS,aAAGJ,MAAM,CAACE;AAAnB,SADJ,GAEIE,KAHE,CAFH;AAOLG,QAAAA,cAAc,EAAG;AAPZ,OAAP;;AAUF,SAAKnB,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKb,oBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaa,MAAb,CACNJ,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAD3B;AAFH,OAAP;;AAOF,SAAKhB,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKX,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAKF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKT,cAAL;AACI,YAAMgB,IAAI,GAAGT,MAAM,CAACE,OAAP,CAAeO,IAA5B;AACA,YAAMC,KAAK,GAAGV,MAAM,CAACE,OAAP,CAAeQ,KAA7B;AACA,UAAIC,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,CAACF,IAAD,CAAL,GAAcC,KAAd;AAEA,aAAO,EACL,GAAGX,KADE;AAEL,WAAGY;AAFE,OAAP;;AAMJ;AACE,aAAOZ,KAAP;AAhFJ;AAkFD,CAnFD;;KAAMD,Q;AAqFN,eAAeA,QAAf","sourcesContent":["import {\n  GET_EVENTS_SUCCESS,\n  GET_EVENTS_FAIL,\n  ADD_EVENT_SUCCESS,\n  ADD_EVENT_FAIL,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAIL,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAIL,\n  RESET_CALENDAR\n} from \"./actionTypes\";\n\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {},  \n};\n\nconst Calendar = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return {\n        ...state,\n        events: action.payload,\n      };\n\n    case GET_EVENTS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case ADD_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case ADD_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case UPDATE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.map(event =>\n          event.id.toString() === action.payload.id.toString()\n            ? { event, ...action.payload }\n            : event\n        ),\n        isEventUpdated : true\n      };\n\n    case UPDATE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case DELETE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.filter(\n          event => event.id.toString() !== action.payload.id.toString()\n        ),\n      };\n\n    case DELETE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n\n    case GET_CATEGORIES_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case RESET_CALENDAR:\n        const flag = action.payload.flag;\n        const value = action.payload.value;\n        var flags = {};\n        flags[flag] = value\n  \n        return {\n          ...state,\n          ...flags\n        };\n\n      \n    default:\n      return state;\n  }\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}