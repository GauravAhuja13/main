{"ast":null,"code":"import axios from \"axios\";\nimport { del, get, post, put } from \"./api_helper\";\nimport * as url from \"./url_helper\"; // Gets the logged in user data from local session\n\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\n\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\n\nconst postFakeRegister = data => post(url.POST_FAKE_REGISTER, data); // Login Method\n\n\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data); // postForgetPwd\n\n\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data); // Edit profile\n\n\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data);\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data); // Register Method\n\n\nconst postJwtRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    var message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data); // postForgetPwd\n\n\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data); // postSocialLogin\n\n\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data); // get Products\n\nexport const getProducts = () => get(url.GET_PRODUCTS); // get Product detail\n\nexport const getProductDetail = id => get(`${url.GET_PRODUCTS_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get Events\n\nexport const getEvents = () => get(url.GET_EVENTS); // add Events\n\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event); // update Event\n\nexport const updateEvent = event => put(url.UPDATE_EVENT, event); // delete Event\n\nexport const deleteEvent = event => del(url.DELETE_EVENT, {\n  headers: {\n    event\n  }\n}); // get Categories\n\nexport const getCategories = () => get(url.GET_CATEGORIES); // get chats\n\nexport const getChats = () => get(url.GET_CHATS); // get groups\n\nexport const getGroups = () => get(url.GET_GROUPS); // get Contacts\n\nexport const getContacts = () => get(url.GET_CONTACTS); // get messages\n\nexport const getMessages = function () {\n  let roomId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return get(`${url.GET_MESSAGES}/${roomId}`, {\n    params: {\n      roomId\n    }\n  });\n}; // post messages\n\nexport const addMessage = message => post(url.ADD_MESSAGE, message); // get orders\n\nexport const getOrders = () => get(url.GET_ORDERS); // add order\n\nexport const addNewOrder = order => post(url.ADD_NEW_ORDER, order); // update order\n\nexport const updateOrder = order => put(url.UPDATE_ORDER, order); // delete order\n\nexport const deleteOrder = order => del(url.DELETE_ORDER, {\n  headers: {\n    order\n  }\n}); // get cart data\n\nexport const getCartData = () => get(url.GET_CART_DATA); // get customers\n\nexport const getCustomers = () => get(url.GET_CUSTOMERS); // add CUSTOMER\n\nexport const addNewCustomer = customer => post(url.ADD_NEW_CUSTOMER, customer); // update CUSTOMER\n\nexport const updateCustomer = customer => put(url.UPDATE_CUSTOMER, customer); // delete CUSTOMER\n\nexport const deleteCustomer = customer => del(url.DELETE_CUSTOMER, {\n  headers: {\n    customer\n  }\n}); // get shops\n\nexport const getShops = () => get(url.GET_SHOPS); // get wallet\n\nexport const getWallet = () => get(url.GET_WALLET); // get crypto order\n\nexport const getCryptoOrder = () => get(url.GET_CRYPTO_ORDERS); // get invoices\n\nexport const getInvoices = () => get(url.GET_INVOICES); // add invoices\n\nexport const addNewInvoice = invoice => post(url.ADD_NEW_INVOICE, invoice); //update invoices\n\nexport const updateInvoice = invoice => put(url.UPDATE_INVOICE, invoice); //delete invoice\n\nexport const deleteInvoice = invoice => del(url.DELETE_INVOICE, {\n  headers: {\n    invoice\n  }\n}); // get invoice details\n\nexport const getInvoiceDetail = id => get(`${url.GET_INVOICE_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get project\n\nexport const getProjects = () => get(url.GET_PROJECTS); // get project details\n\nexport const getProjectsDetails = id => get(`${url.GET_PROJECT_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get tasks\n\nexport const getTasks = () => get(url.GET_TASKS); // get contacts\n\nexport const getUsers = () => get(url.GET_USERS); // add user\n\nexport const addNewUser = user => post(url.ADD_NEW_USER, user); // update user\n\nexport const updateUser = user => put(url.UPDATE_USER, user); // delete user\n\nexport const deleteUser = user => del(url.DELETE_USER, {\n  headers: {\n    user\n  }\n});\n/** PROJECT */\n// add user\n\nexport const addNewProject = project => post(url.ADD_NEW_PROJECT, project); // update user\n\nexport const updateProject = project => put(url.UPDATE_PROJECT, project); // delete user\n\nexport const deleteProject = project => del(url.DELETE_PROJECT, {\n  headers: {\n    project\n  }\n});\nexport const getUserProfile = () => get(url.GET_USER_PROFILE);\nexport { getLoggedInUser, isUserAuthenticated, postFakeRegister, postFakeLogin, postFakeProfile, postFakeForgetPwd, postJwtRegister, postJwtLogin, postJwtForgetPwd, postJwtProfile };","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/helpers/fakebackend_helper.js"],"names":["axios","del","get","post","put","url","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postFakeRegister","data","POST_FAKE_REGISTER","postFakeLogin","POST_FAKE_LOGIN","postFakeForgetPwd","POST_FAKE_PASSWORD_FORGET","postJwtProfile","POST_EDIT_JWT_PROFILE","postFakeProfile","POST_EDIT_PROFILE","postJwtRegister","then","response","status","catch","err","message","postJwtLogin","POST_FAKE_JWT_LOGIN","postJwtForgetPwd","POST_FAKE_JWT_PASSWORD_FORGET","postSocialLogin","SOCIAL_LOGIN","getProducts","GET_PRODUCTS","getProductDetail","id","GET_PRODUCTS_DETAIL","params","getEvents","GET_EVENTS","addNewEvent","event","ADD_NEW_EVENT","updateEvent","UPDATE_EVENT","deleteEvent","DELETE_EVENT","headers","getCategories","GET_CATEGORIES","getChats","GET_CHATS","getGroups","GET_GROUPS","getContacts","GET_CONTACTS","getMessages","roomId","GET_MESSAGES","addMessage","ADD_MESSAGE","getOrders","GET_ORDERS","addNewOrder","order","ADD_NEW_ORDER","updateOrder","UPDATE_ORDER","deleteOrder","DELETE_ORDER","getCartData","GET_CART_DATA","getCustomers","GET_CUSTOMERS","addNewCustomer","customer","ADD_NEW_CUSTOMER","updateCustomer","UPDATE_CUSTOMER","deleteCustomer","DELETE_CUSTOMER","getShops","GET_SHOPS","getWallet","GET_WALLET","getCryptoOrder","GET_CRYPTO_ORDERS","getInvoices","GET_INVOICES","addNewInvoice","invoice","ADD_NEW_INVOICE","updateInvoice","UPDATE_INVOICE","deleteInvoice","DELETE_INVOICE","getInvoiceDetail","GET_INVOICE_DETAIL","getProjects","GET_PROJECTS","getProjectsDetails","GET_PROJECT_DETAIL","getTasks","GET_TASKS","getUsers","GET_USERS","addNewUser","ADD_NEW_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","addNewProject","project","ADD_NEW_PROJECT","updateProject","UPDATE_PROJECT","deleteProject","DELETE_PROJECT","getUserProfile","GET_USER_PROFILE"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { del, get, post, put } from \"./api_helper\";\nimport * as url from \"./url_helper\";\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n};\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n};\n\n// Register Method\nconst postFakeRegister = (data) => post(url.POST_FAKE_REGISTER, data);\n\n// Login Method\nconst postFakeLogin = (data) => post(url.POST_FAKE_LOGIN, data);\n\n// postForgetPwd\nconst postFakeForgetPwd = (data) => post(url.POST_FAKE_PASSWORD_FORGET, data);\n\n// Edit profile\nconst postJwtProfile = (data) => post(url.POST_EDIT_JWT_PROFILE, data);\n\nconst postFakeProfile = (data) => post(url.POST_EDIT_PROFILE, data);\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status >= 200 || response.status <= 299)\n        return response.data;\n      throw response.data;\n    })\n    .catch((err) => {\n      var message;\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\";\n            break;\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\";\n            break;\n          case 401:\n            message = \"Invalid credentials\";\n            break;\n          default:\n            message = err[1];\n            break;\n        }\n      }\n      throw message;\n    });\n};\n\n// Login Method\nconst postJwtLogin = (data) => post(url.POST_FAKE_JWT_LOGIN, data);\n\n// postForgetPwd\nconst postJwtForgetPwd = (data) =>\n  post(url.POST_FAKE_JWT_PASSWORD_FORGET, data);\n\n// postSocialLogin\nexport const postSocialLogin = (data) => post(url.SOCIAL_LOGIN, data);\n\n// get Products\nexport const getProducts = () => get(url.GET_PRODUCTS);\n\n// get Product detail\nexport const getProductDetail = (id) =>\n  get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } });\n\n// get Events\nexport const getEvents = () => get(url.GET_EVENTS);\n\n// add Events\nexport const addNewEvent = (event) => post(url.ADD_NEW_EVENT, event);\n\n// update Event\nexport const updateEvent = (event) => put(url.UPDATE_EVENT, event);\n\n// delete Event\nexport const deleteEvent = (event) =>\n  del(url.DELETE_EVENT, { headers: { event } });\n\n// get Categories\nexport const getCategories = () => get(url.GET_CATEGORIES);\n\n// get chats\nexport const getChats = () => get(url.GET_CHATS);\n\n// get groups\nexport const getGroups = () => get(url.GET_GROUPS);\n\n// get Contacts\nexport const getContacts = () => get(url.GET_CONTACTS);\n\n// get messages\nexport const getMessages = (roomId = \"\") =>\n  get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } });\n\n// post messages\nexport const addMessage = (message) => post(url.ADD_MESSAGE, message);\n\n// get orders\nexport const getOrders = () => get(url.GET_ORDERS);\n\n// add order\nexport const addNewOrder = (order) => post(url.ADD_NEW_ORDER, order);\n\n// update order\nexport const updateOrder = (order) => put(url.UPDATE_ORDER, order);\n\n// delete order\nexport const deleteOrder = (order) =>\n  del(url.DELETE_ORDER, { headers: { order } });\n\n// get cart data\nexport const getCartData = () => get(url.GET_CART_DATA);\n\n// get customers\nexport const getCustomers = () => get(url.GET_CUSTOMERS);\n\n// add CUSTOMER\nexport const addNewCustomer = (customer) =>\n  post(url.ADD_NEW_CUSTOMER, customer);\n\n// update CUSTOMER\nexport const updateCustomer = (customer) => put(url.UPDATE_CUSTOMER, customer);\n\n// delete CUSTOMER\nexport const deleteCustomer = (customer) =>\n  del(url.DELETE_CUSTOMER, { headers: { customer } });\n\n// get shops\nexport const getShops = () => get(url.GET_SHOPS);\n\n// get wallet\nexport const getWallet = () => get(url.GET_WALLET);\n\n// get crypto order\nexport const getCryptoOrder = () => get(url.GET_CRYPTO_ORDERS);\n\n// get invoices\nexport const getInvoices = () => get(url.GET_INVOICES);\n\n// add invoices\nexport const addNewInvoice = (invoice) =>\npost(url.ADD_NEW_INVOICE, invoice);\n\n//update invoices\nexport const updateInvoice = (invoice) => put(url.UPDATE_INVOICE, invoice);\n\n//delete invoice\nexport const deleteInvoice = (invoice) =>\ndel(url.DELETE_INVOICE, {headers: {invoice}})\n\n// get invoice details\nexport const getInvoiceDetail = (id) =>\n  get(`${url.GET_INVOICE_DETAIL}/${id}`, { params: { id } });\n\n// get project\nexport const getProjects = () => get(url.GET_PROJECTS);\n\n// get project details\nexport const getProjectsDetails = (id) =>\n  get(`${url.GET_PROJECT_DETAIL}/${id}`, { params: { id } });\n\n// get tasks\nexport const getTasks = () => get(url.GET_TASKS);\n\n// get contacts\nexport const getUsers = () => get(url.GET_USERS);\n\n// add user\nexport const addNewUser = (user) => post(url.ADD_NEW_USER, user);\n\n// update user\nexport const updateUser = (user) => put(url.UPDATE_USER, user);\n\n// delete user\nexport const deleteUser = (user) => del(url.DELETE_USER, { headers: { user } });\n\n/** PROJECT */\n// add user\nexport const addNewProject = (project) => post(url.ADD_NEW_PROJECT, project);\n\n// update user\nexport const updateProject = (project) => put(url.UPDATE_PROJECT, project);\n\n// delete user\nexport const deleteProject = (project) =>\n  del(url.DELETE_PROJECT, { headers: { project } });\n\nexport const getUserProfile = () => get(url.GET_USER_PROFILE);\n\nexport {\n  getLoggedInUser,\n  isUserAuthenticated,\n  postFakeRegister,\n  postFakeLogin,\n  postFakeProfile,\n  postFakeForgetPwd,\n  postJwtRegister,\n  postJwtLogin,\n  postJwtForgetPwd,\n  postJwtProfile,\n};\n"]},"metadata":{},"sourceType":"module"}