{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_INVOICES, GET_INVOICE_DETAIL, ADD_NEW_INVOICE, UPDATE_INVOICE, DELETE_INVOICE } from \"./actionTypes\";\nimport { getInvoicesSuccess, getInvoicesFail, getInvoiceDetailSuccess, getInvoiceDetailFail, addInvoiceSuccess, addInvoiceFail, updateInvoiceSuccess, updateInvoiceFail, deleteInvoiceSuccess, deleteInvoiceFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getInvoices, getInvoiceDetail, addNewInvoice, updateInvoice, deleteInvoice } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices);\n    yield put(getInvoicesSuccess(response));\n  } catch (error) {\n    yield put(getInvoicesFail(error));\n  }\n}\n\nfunction* onUpdateInvoice(_ref) {\n  let {\n    payload: invoice\n  } = _ref;\n\n  try {\n    const response = yield call(updateInvoice, invoice);\n    yield put(updateInvoiceSuccess(response));\n  } catch (error) {\n    yield put(updateInvoiceFail(error));\n  }\n}\n\nfunction* onDeleteInvoice(_ref2) {\n  let {\n    payload: invoice\n  } = _ref2;\n\n  try {\n    const response = yield call(deleteInvoice, invoice);\n    yield put(deleteInvoiceSuccess(response));\n  } catch (error) {\n    yield put(deleteInvoiceFail(error));\n  }\n}\n\nfunction* onAddNewInvoice(_ref3) {\n  let {\n    payload: invoice\n  } = _ref3;\n\n  try {\n    const response = yield call(addNewInvoice, invoice);\n    yield put(addInvoiceSuccess(response));\n  } catch (error) {\n    yield put(addInvoiceFail(error));\n  }\n}\n\nfunction* fetchInvoiceDetail(_ref4) {\n  let {\n    invoiceId\n  } = _ref4;\n\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId);\n    yield put(getInvoiceDetailSuccess(response));\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error));\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices);\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail);\n  yield takeEvery(ADD_NEW_INVOICE, onAddNewInvoice);\n  yield takeEvery(UPDATE_INVOICE, onUpdateInvoice);\n  yield takeEvery(DELETE_INVOICE, onDeleteInvoice);\n}\n\nexport default invoiceSaga;","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/store/invoices/saga.js"],"names":["call","put","takeEvery","GET_INVOICES","GET_INVOICE_DETAIL","ADD_NEW_INVOICE","UPDATE_INVOICE","DELETE_INVOICE","getInvoicesSuccess","getInvoicesFail","getInvoiceDetailSuccess","getInvoiceDetailFail","addInvoiceSuccess","addInvoiceFail","updateInvoiceSuccess","updateInvoiceFail","deleteInvoiceSuccess","deleteInvoiceFail","getInvoices","getInvoiceDetail","addNewInvoice","updateInvoice","deleteInvoice","fetchInvoices","response","error","onUpdateInvoice","payload","invoice","onDeleteInvoice","onAddNewInvoice","fetchInvoiceDetail","invoiceId","invoiceSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SACEC,YADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,cALF,QAMQ,eANR;AAOA,SACEC,kBADF,EAEEC,eAFF,EAGEC,uBAHF,EAIEC,oBAJF,EAKEC,iBALF,EAMEC,cANF,EAOEC,oBAPF,EAQEC,iBARF,EASEC,oBATF,EAUEC,iBAVF,QAWO,WAXP,C,CAaA;;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,aALF,QAMQ,kCANR;;AAQA,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACkB,WAAD,CAA3B;AACA,UAAMjB,GAAG,CAACO,kBAAkB,CAACgB,QAAD,CAAnB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACQ,eAAe,CAACgB,KAAD,CAAhB,CAAT;AACD;AACF;;AAED,UAAUC,eAAV,OAAgD;AAAA,MAArB;AAACC,IAAAA,OAAO,EAAEC;AAAV,GAAqB;;AAC9C,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACqB,aAAD,EAAgBO,OAAhB,CAA3B;AACA,UAAM3B,GAAG,CAACa,oBAAoB,CAACU,QAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACc,iBAAiB,CAACU,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,UAAUI,eAAV,QAA+C;AAAA,MAApB;AAACF,IAAAA,OAAO,EAAEC;AAAV,GAAoB;;AAC7C,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACsB,aAAD,EAAgBM,OAAhB,CAA3B;AACA,UAAM3B,GAAG,CAACe,oBAAoB,CAACQ,QAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACgB,iBAAiB,CAACQ,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,UAAUK,eAAV,QAAgD;AAAA,MAArB;AAAEH,IAAAA,OAAO,EAAEC;AAAX,GAAqB;;AAC9C,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACoB,aAAD,EAAgBQ,OAAhB,CAA3B;AACA,UAAM3B,GAAG,CAACW,iBAAiB,CAACY,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACY,cAAc,CAACY,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUM,kBAAV,QAA4C;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;;AAC1C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxB,IAAI,CAACmB,gBAAD,EAAmBa,SAAnB,CAA3B;AACA,UAAM/B,GAAG,CAACS,uBAAuB,CAACc,QAAD,CAAxB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,oBAAoB,CAACc,KAAD,CAArB,CAAT;AACD;AACF;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAM/B,SAAS,CAACC,YAAD,EAAeoB,aAAf,CAAf;AACA,QAAMrB,SAAS,CAACE,kBAAD,EAAqB2B,kBAArB,CAAf;AACA,QAAM7B,SAAS,CAACG,eAAD,EAAkByB,eAAlB,CAAf;AACA,QAAM5B,SAAS,CAACI,cAAD,EAAiBoB,eAAjB,CAAf;AACA,QAAMxB,SAAS,CAACK,cAAD,EAAiBsB,eAAjB,CAAf;AACD;;AAED,eAAeI,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { \n  GET_INVOICES,\n  GET_INVOICE_DETAIL,\n  ADD_NEW_INVOICE,\n  UPDATE_INVOICE,\n  DELETE_INVOICE\n } from \"./actionTypes\"\nimport {\n  getInvoicesSuccess,\n  getInvoicesFail,\n  getInvoiceDetailSuccess,\n  getInvoiceDetailFail,\n  addInvoiceSuccess,\n  addInvoiceFail,\n  updateInvoiceSuccess,\n  updateInvoiceFail,\n  deleteInvoiceSuccess,\n  deleteInvoiceFail\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { \n  getInvoices,\n  getInvoiceDetail,\n  addNewInvoice,\n  updateInvoice,\n  deleteInvoice,\n } from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices)\n    yield put(getInvoicesSuccess(response))\n  } catch (error) {\n    yield put(getInvoicesFail(error))\n  }\n}\n\nfunction* onUpdateInvoice ({payload: invoice }) {\n  try {\n    const response = yield call(updateInvoice, invoice);\n    yield put(updateInvoiceSuccess(response));\n  } catch (error) {\n    yield put(updateInvoiceFail(error));\n  }\n}\n\nfunction* onDeleteInvoice ({payload: invoice}) {\n  try {\n    const response = yield call(deleteInvoice, invoice);\n    yield put(deleteInvoiceSuccess(response));\n  } catch (error) {\n    yield put(deleteInvoiceFail(error));\n  }\n}\n\nfunction* onAddNewInvoice ({ payload: invoice}) {\n  try {\n    const response = yield call(addNewInvoice, invoice);\n    yield put(addInvoiceSuccess(response));\n  } catch (error) {\n    yield put(addInvoiceFail(error));\n  }\n}\n\nfunction* fetchInvoiceDetail({ invoiceId }) {\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId)\n    yield put(getInvoiceDetailSuccess(response))\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error))\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices)\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail)\n  yield takeEvery(ADD_NEW_INVOICE, onAddNewInvoice);\n  yield takeEvery(UPDATE_INVOICE, onUpdateInvoice);\n  yield takeEvery(DELETE_INVOICE, onDeleteInvoice);\n}\n\nexport default invoiceSaga\n"]},"metadata":{},"sourceType":"module"}