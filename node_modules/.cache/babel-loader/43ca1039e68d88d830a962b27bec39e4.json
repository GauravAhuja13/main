{"ast":null,"code":"var _jsxFileName = \"/home/happy/Downloads/main-main/src/pages/Ecommerce/EcommerceOrders/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableContainer from \"../../../components/Common/TableContainer\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //import components\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { getOrders as onGetOrders, addNewOrder as onAddNewOrder, updateOrder as onUpdateOrder, deleteOrder as onDeleteOrder } from \"../../../store/actions\";\nimport { OrderId, BillingName, Date, Total, PaymentStatus } from \"./EcommerceOrderCol\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row, UncontrolledTooltip, Modal, ModalHeader, ModalBody, Form, Input, FormFeedback, Label, Card, CardBody } from \"reactstrap\";\nimport DeleteModal from \"../../../components/Common/DeleteModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DatatableTables() {\n  _s();\n\n  const [modal, setModal] = useState(false); // const [modal1, setModal1] = useState(false);\n\n  const [isEdit, setIsEdit] = useState(false);\n  const [orderList1, setOrderList1] = useState([]);\n  const [order1, setOrder1] = useState([]); // validation\n\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      orderId: order1 && order1.orderId || \"\",\n      billingName: order1 && order1.billingName || \"\",\n      orderdate: order1 && order1.orderdate || \"\",\n      total: order1 && order1.total || \"\",\n      paymentStatus: order1 && order1.paymentStatus || \"Paid\",\n      badgeclass: order1 && order1.badgeclass || \"success\"\n    },\n    validationSchema: Yup.object({\n      orderId: Yup.string().required(\"Please Enter Your Order Id\"),\n      billingName: Yup.string().required(\"Please Enter Your Billing Name\"),\n      orderdate: Yup.string().required(\"Please Enter Your Order Date\"),\n      total: Yup.string().required(\"Total Amount\"),\n      paymentStatus: Yup.string().required(\"Please Enter Your Payment Status\"),\n      badgeclass: Yup.string().required(\"Please Enter Your Badge Class\")\n    }),\n    onSubmit: values => {\n      if (isEdit) {\n        const updateOrder = {\n          id: order1 ? order1.id : 0,\n          orderId: values.orderId,\n          billingName: values.billingName,\n          orderdate: values.orderdate,\n          total: values.total,\n          paymentStatus: values.paymentStatus,\n          badgeclass: values.badgeclass\n        };\n        dispatch(onUpdateOrder(updateOrder));\n        validation.resetForm();\n      } else {\n        const newOrder = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          orderId: values[\"orderId\"],\n          billingName: values[\"billingName\"],\n          orderdate: values[\"orderdate\"],\n          total: values[\"total\"],\n          paymentStatus: values[\"paymentStatus\"],\n          badgeclass: values[\"badgeclass\"]\n        }; // save new order1\n\n        dispatch(onAddNewOrder(newOrder));\n        validation.resetForm();\n      }\n\n      toggle();\n    }\n  }); // const toggleViewModal = () => setModal1(!modal1);\n\n  const dispatch = useDispatch();\n  const {\n    orders\n  } = useSelector(state => ({\n    orders: state.ecommerce.orders\n  }));\n  useEffect(() => {\n    if (orders && !orders.length) {\n      dispatch(onGetOrders());\n    }\n  }, [dispatch, orders]);\n  useEffect(() => {\n    if (orders && !orders.length) {\n      dispatch(onGetOrders());\n    }\n  }, [dispatch, orders]);\n  useEffect(() => {\n    setOrderList1(orders);\n  }, [order1]);\n  useEffect(() => {\n    if (!isEmpty(orders) && !!isEdit) {\n      setOrderList1(orders);\n      setIsEdit(false);\n    }\n  }, [orders]);\n\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setOrder1(null);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const handleOrderClick = arg => {\n    const order1 = arg;\n    setOrder1({\n      id: order1.id,\n      orderId: order1.orderId,\n      billingName: order1.billingName,\n      orderdate: order1.orderdate,\n      total: order1.total,\n      paymentStatus: order1.paymentStatus,\n      badgeclass: order1.badgeclass\n    });\n    setIsEdit(true);\n    toggle();\n  }; //delete order1\n\n\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onClickDelete = order1 => {\n    setOrder1(order1);\n    setDeleteModal(true);\n  };\n\n  const handleDeleteOrder = () => {\n    if (order1.id) {\n      dispatch(onDeleteOrder(order1));\n      setDeleteModal(false);\n    }\n  };\n\n  const handleOrderClicks = () => {\n    setOrderList1(\"\");\n    setIsEdit(false);\n    toggle();\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Id\",\n    accessor: \"checkbox\",\n    disableFilters: true,\n    filterable: false,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"selection-input-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    Header: \"Order ID\",\n    accessor: \"orderId\",\n    disableGlobalFilter: true,\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(OrderId, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Date\",\n    accessor: \"orderdate\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(Date, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Billing Name\",\n    accessor: \"billingName\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(BillingName, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Total\",\n    accessor: \"total\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(Total, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Payment Status\",\n    accessor: \"paymentStatus\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(PaymentStatus, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Action\",\n    accessor: \"action\",\n    disableFilters: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-success\",\n          onClick: () => {\n            const orderData = cellProps.row.original;\n            handleOrderClick(orderData);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-pencil font-size-18\",\n            id: \"edittooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n            placement: \"top\",\n            target: \"edittooltip\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-danger\",\n          onClick: () => {\n            const orderData = cellProps.row.original;\n            onClickDelete(orderData);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-delete font-size-18\",\n            id: \"deletetooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n            placement: \"top\",\n            target: \"deletetooltip\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {\n      show: deleteModal,\n      onDeleteClick: handleDeleteOrder,\n      onCloseClick: () => setDeleteModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Ecommerce\",\n          breadcrumbItem: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                  columns: columns,\n                  data: orders,\n                  isGlobalFilter: true,\n                  isAddTableWithoutBorderStrap: true,\n                  isAddOrder: true,\n                  handleOrderClicks: handleOrderClicks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal,\n          toggle: toggle,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggle,\n            tag: \"h4\",\n            children: !!isEdit ? \"Edit Order\" : \"Add Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => {\n                e.preventDefault();\n                validation.handleSubmit();\n                return false;\n              },\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                form: true,\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Order Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"orderId\",\n                      type: \"text\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.orderId || \"\",\n                      invalid: validation.touched.orderId && validation.errors.orderId ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this), validation.touched.orderId && validation.errors.orderId ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.orderId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Billing Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"billingName\",\n                      type: \"text\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.billingName || \"\",\n                      invalid: validation.touched.billingName && validation.errors.billingName ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this), validation.touched.billingName && validation.errors.billingName ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.billingName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Order Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"orderdate\",\n                      type: \"date\" // value={orderList1.orderdate || \"\"}\n                      ,\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.orderdate || \"\",\n                      invalid: validation.touched.orderdate && validation.errors.orderdate ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 23\n                    }, this), validation.touched.orderdate && validation.errors.orderdate ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.orderdate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Total\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"total\",\n                      type: \"text\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.total || \"\",\n                      invalid: validation.touched.total && validation.errors.total ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 23\n                    }, this), validation.touched.total && validation.errors.total ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.total\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Payment Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"paymentStatus\",\n                      type: \"select\",\n                      className: \"form-select\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.paymentStatus || \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Paid\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Chargeback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Refund\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 23\n                    }, this), validation.touched.paymentStatus && validation.errors.paymentStatus ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.paymentStatus\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Badge Class\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"badgeclass\",\n                      type: \"select\",\n                      className: \"form-select\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.badgeclass || \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"warning\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success save-user\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DatatableTables, \"C7IZOiVRyrvGTonD2JAwiQbpbIM=\", false, function () {\n  return [useFormik, useDispatch, useSelector];\n});\n\n_c = DatatableTables;\nDatatableTables.propTypes = {\n  preGlobalFilteredRows: PropTypes.any\n};\nexport default DatatableTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatatableTables\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/pages/Ecommerce/EcommerceOrders/index.js"],"names":["React","useEffect","useMemo","useState","PropTypes","Link","isEmpty","TableContainer","Yup","useFormik","Breadcrumbs","getOrders","onGetOrders","addNewOrder","onAddNewOrder","updateOrder","onUpdateOrder","deleteOrder","onDeleteOrder","OrderId","BillingName","Date","Total","PaymentStatus","useSelector","useDispatch","Col","Row","UncontrolledTooltip","Modal","ModalHeader","ModalBody","Form","Input","FormFeedback","Label","Card","CardBody","DeleteModal","DatatableTables","modal","setModal","isEdit","setIsEdit","orderList1","setOrderList1","order1","setOrder1","validation","enableReinitialize","initialValues","orderId","billingName","orderdate","total","paymentStatus","badgeclass","validationSchema","object","string","required","onSubmit","values","id","dispatch","resetForm","newOrder","Math","floor","random","toggle","orders","state","ecommerce","length","handleOrderClick","arg","deleteModal","setDeleteModal","onClickDelete","handleDeleteOrder","handleOrderClicks","columns","Header","accessor","disableFilters","filterable","Cell","cellProps","disableGlobalFilter","orderData","row","original","e","preventDefault","handleSubmit","handleChange","handleBlur","touched","errors","value","propTypes","preGlobalFilteredRows","any"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableContainer from \"../../../components/Common/TableContainer\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n//import components\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\n\nimport {\n  getOrders as onGetOrders,\n  addNewOrder as onAddNewOrder,\n  updateOrder as onUpdateOrder,\n  deleteOrder as onDeleteOrder,\n} from \"../../../store/actions\";\n\nimport {\n  OrderId,\n  BillingName,\n  Date,\n  Total,\n  PaymentStatus,\n} from \"./EcommerceOrderCol\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Col,\n  Row,\n  UncontrolledTooltip,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Input,\n  FormFeedback,\n  Label,\n  Card,\n  CardBody,\n} from \"reactstrap\";\nimport DeleteModal from \"../../../components/Common/DeleteModal\";\n\nfunction DatatableTables() {\n  const [modal, setModal] = useState(false);\n  // const [modal1, setModal1] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const [orderList1, setOrderList1] = useState([]);\n  const [order1, setOrder1] = useState([]);\n\n  // validation\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      orderId: (order1 && order1.orderId) || \"\",\n      billingName: (order1 && order1.billingName) || \"\",\n      orderdate: (order1 && order1.orderdate) || \"\",\n      total: (order1 && order1.total) || \"\",\n      paymentStatus: (order1 && order1.paymentStatus) || \"Paid\",\n      badgeclass: (order1 && order1.badgeclass) || \"success\",\n    },\n    validationSchema: Yup.object({\n      orderId: Yup.string().required(\"Please Enter Your Order Id\"),\n      billingName: Yup.string().required(\"Please Enter Your Billing Name\"),\n      orderdate: Yup.string().required(\"Please Enter Your Order Date\"),\n      total: Yup.string().required(\"Total Amount\"),\n      paymentStatus: Yup.string().required(\"Please Enter Your Payment Status\"),\n      badgeclass: Yup.string().required(\"Please Enter Your Badge Class\"),\n    }),\n    onSubmit: (values) => {\n      if (isEdit) {\n        const updateOrder = {\n          id: order1 ? order1.id : 0,\n          orderId: values.orderId,\n          billingName: values.billingName,\n          orderdate: values.orderdate,\n          total: values.total,\n          paymentStatus: values.paymentStatus,\n          badgeclass: values.badgeclass,\n        };\n       \n        dispatch(onUpdateOrder(updateOrder));\n        validation.resetForm();\n      } else {\n        const newOrder = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          orderId: values[\"orderId\"],\n          billingName: values[\"billingName\"],\n          orderdate: values[\"orderdate\"],\n          total: values[\"total\"],\n          paymentStatus: values[\"paymentStatus\"],\n          badgeclass: values[\"badgeclass\"],\n        };\n       \n        // save new order1\n        dispatch(onAddNewOrder(newOrder));\n        validation.resetForm();\n      }\n      toggle();\n    },\n  });\n\n  // const toggleViewModal = () => setModal1(!modal1);\n\n  const dispatch = useDispatch();\n  const { orders } = useSelector((state) => ({\n    orders: state.ecommerce.orders,\n  }));\n  useEffect(() => {\n    if (orders && !orders.length) {\n      dispatch(onGetOrders());\n    }\n  }, [dispatch, orders]);\n\n  useEffect(() => {\n    if (orders && !orders.length) {\n      dispatch(onGetOrders());\n    }\n  }, [dispatch, orders]);\n\n  useEffect(() => {\n    setOrderList1(orders);\n  }, [order1]);\n\n  useEffect(() => {\n    if (!isEmpty(orders) && !!isEdit) {\n      setOrderList1(orders);\n      setIsEdit(false);\n    }\n  }, [orders]);\n\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setOrder1(null);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const handleOrderClick = (arg) => {\n    const order1 = arg;\n    setOrder1({\n      id: order1.id,\n      orderId: order1.orderId,\n      billingName: order1.billingName,\n      orderdate: order1.orderdate,\n      total: order1.total,\n      paymentStatus: order1.paymentStatus,\n      badgeclass: order1.badgeclass,\n    });\n\n    setIsEdit(true);\n\n    toggle();\n  };\n\n  //delete order1\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onClickDelete = (order1) => {\n    setOrder1(order1);\n    setDeleteModal(true);\n  };\n\n  const handleDeleteOrder = () => {\n    if (order1.id) {\n      dispatch(onDeleteOrder(order1));\n      setDeleteModal(false);\n    }\n  };\n  const handleOrderClicks = () => {\n    setOrderList1(\"\");\n    setIsEdit(false);\n    toggle();\n  };\n\n  const columns = useMemo(\n    () => [\n       {\n        Header: \"Id\",\n        accessor: \"checkbox\",\n        disableFilters: true,\n        filterable: false,\n        Cell: (cellProps) => {\n          return (\n            <input type=\"checkbox\" className=\"selection-input-4\" />\n            );\n        },\n      },\n      {\n        Header: \"Order ID\",\n        accessor: \"orderId\",\n        disableGlobalFilter : true,\n        filterable: true,\n        Cell: (cellProps) => {\n          return <OrderId {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Date\",\n        accessor: \"orderdate\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <Date {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Billing Name\",\n        accessor: \"billingName\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <BillingName {...cellProps} />;\n        },\n      },\n      \n      {\n        Header: \"Total\",\n        accessor: \"total\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <Total {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Payment Status\",\n        accessor: \"paymentStatus\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <PaymentStatus {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Action\",\n        accessor: \"action\",\n        disableFilters: true,\n        Cell: (cellProps) => {\n          return (\n            <div className=\"d-flex gap-3\">\n              <Link\n                to=\"#\"\n                className=\"text-success\"\n                onClick={() => {\n                  const orderData = cellProps.row.original;\n                  handleOrderClick(orderData);\n                }}\n              >\n                <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\" />\n                <UncontrolledTooltip placement=\"top\" target=\"edittooltip\">\n                  Edit\n                </UncontrolledTooltip>\n              </Link>\n              <Link\n                to=\"#\"\n                className=\"text-danger\"\n                onClick={() => {\n                  const orderData = cellProps.row.original;\n                  onClickDelete(orderData)\n                }}\n              >\n                <i className=\"mdi mdi-delete font-size-18\" id=\"deletetooltip\" />\n                <UncontrolledTooltip placement=\"top\" target=\"deletetooltip\">\n                  Delete\n                </UncontrolledTooltip>\n              </Link>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <React.Fragment>\n      <DeleteModal\n        show={deleteModal}\n        onDeleteClick={handleDeleteOrder}\n        onCloseClick={() => setDeleteModal(false)}\n      />\n      <div className=\"page-content\">\n        <div className=\"container-fluid\">\n          <Breadcrumbs title=\"Ecommerce\" breadcrumbItem=\"Orders\" />\n          <Row>\n            <Col xs=\"12\">\n              <Card>\n                <CardBody>\n                  <TableContainer\n                    columns={columns}\n                    data={orders}\n                    isGlobalFilter={true}\n                    isAddTableWithoutBorderStrap={true}\n                    isAddOrder={true}\n                    handleOrderClicks={handleOrderClicks}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle} tag=\"h4\">\n              {!!isEdit ? \"Edit Order\" : \"Add Order\"}\n            </ModalHeader>\n            <ModalBody>\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  validation.handleSubmit();\n                  return false;\n                }}\n              >\n                <Row form>\n                  <Col className=\"col-12\">\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Order Id</Label>\n                      <Input\n                        name=\"orderId\"\n                        type=\"text\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.orderId || \"\"}\n                        invalid={\n                          validation.touched.orderId &&\n                          validation.errors.orderId\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.orderId &&\n                      validation.errors.orderId ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.orderId}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Billing Name</Label>\n                      <Input\n                        name=\"billingName\"\n                        type=\"text\"\n                        validate={{\n                          required: { value: true },\n                        }}\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.billingName || \"\"}\n                        invalid={\n                          validation.touched.billingName &&\n                          validation.errors.billingName\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.billingName &&\n                      validation.errors.billingName ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.billingName}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Order Date</Label>\n                      <Input\n                        name=\"orderdate\"\n                        type=\"date\"\n                        // value={orderList1.orderdate || \"\"}\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.orderdate || \"\"}\n                        invalid={\n                          validation.touched.orderdate &&\n                          validation.errors.orderdate\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.orderdate &&\n                      validation.errors.orderdate ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.orderdate}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Total</Label>\n                      <Input\n                        name=\"total\"\n                        type=\"text\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.total || \"\"}\n                        invalid={\n                          validation.touched.total && validation.errors.total\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.total && validation.errors.total ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.total}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Payment Status</Label>\n                      <Input\n                        name=\"paymentStatus\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.paymentStatus || \"\"}\n                      >\n                        <option>Paid</option>\n                        <option>Chargeback</option>\n                        <option>Refund</option>\n                      </Input>\n                      {validation.touched.paymentStatus &&\n                      validation.errors.paymentStatus ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.paymentStatus}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Badge Class</Label>\n                      <Input\n                        name=\"badgeclass\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.badgeclass || \"\"}\n                      >\n                        <option>success</option>\n                        <option>danger</option>\n                        <option>warning</option>\n                      </Input>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <div className=\"text-end\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success save-user\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nDatatableTables.propTypes = {\n  preGlobalFilteredRows: PropTypes.any,\n};\n\nexport default DatatableTables;\n"]},"metadata":{},"sourceType":"module"}