{"ast":null,"code":"var _jsxFileName = \"/home/happy/Downloads/main-main/src/pages/Calendar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmpty } from \"lodash\";\nimport { Button, Card, CardBody, Col, Container, Form, FormFeedback, Input, Label, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //import images\n\nimport Commingsoon from \"../../assets/images/coming-soon-img.png\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport BootstrapTheme from \"@fullcalendar/bootstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { addNewEvent as onAddNewEvent, deleteEvent as onDeleteEvent, getCategories as onGetCategories, getEvents as onGetEvents, updateEvent as onUpdateEvent } from \"../../store/actions\";\nimport DeleteModal from \"./DeleteModal\"; //css\n\nimport \"@fullcalendar/bootstrap/main.css\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calender = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [event, setEvent] = useState({}); // events validation\n\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      title: event && event.title || \"\",\n      category: event && event.category || \"\"\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required(\"Please Enter Your Event Name\"),\n      category: Yup.string().required(\"Please Select Your Category\")\n    }),\n    onSubmit: values => {\n      if (isEdit) {\n        const updateEvent = {\n          id: event.id,\n          title: values.title,\n          classNames: values.category + \" text-white\",\n          start: event.start\n        }; // update event\n\n        dispatch(onUpdateEvent(updateEvent));\n        validation.resetForm();\n      } else {\n        const newEvent = {\n          id: Math.floor(Math.random() * 100),\n          title: values[\"title\"],\n          start: selectedDay ? selectedDay.date : new Date(),\n          className: values.category + \" text-white\"\n        }; // save new event\n\n        dispatch(onAddNewEvent(newEvent));\n        validation.resetForm();\n      }\n\n      setSelectedDay(null);\n      toggle();\n    }\n  }); // category validation\n\n  const categoryValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      title: event && event.title || \"\",\n      category: event && event.category || \"\"\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required(\"Please Enter Your Order Id\"),\n      category: Yup.string().required(\"Please Enter Your Billing Name\")\n    }),\n    onSubmit: values => {\n      const newEvent = {\n        id: Math.floor(Math.random() * 100),\n        title: values[\"title\"],\n        start: selectedDay ? selectedDay.date : new Date(),\n        className: values.event_category ? values.event_category + \" text-white\" : \"bg-danger text-white\"\n      }; // save new event\n\n      dispatch(onAddNewEvent(newEvent));\n      toggleCategory();\n    }\n  });\n  const {\n    events,\n    categories\n  } = useSelector(state => ({\n    events: state.calendar.events,\n    categories: state.calendar.categories\n  }));\n  const [modal, setModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [modalcategory, setModalcategory] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(0);\n  const [isEdit, setIsEdit] = useState(false);\n  useEffect(() => {\n    dispatch(onGetCategories());\n    dispatch(onGetEvents());\n    new Draggable(document.getElementById(\"external-events\"), {\n      itemSelector: \".external-event\"\n    });\n  }, []);\n  useEffect(() => {\n    if (!modal && !isEmpty(event) && !!isEdit) {\n      setTimeout(() => {\n        setEvent({});\n        setIsEdit(false);\n      }, 700);\n    }\n  }, [modal, event]);\n  /**\n   * Handling the modal state\n   */\n\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setEvent(null);\n      setIsEdit(false);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const toggleCategory = () => {\n    setModalcategory(!modalcategory);\n  };\n  /**\n   * Handling date click on calendar\n   */\n\n\n  const handleDateClick = arg => {\n    const date = arg[\"date\"];\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const currectDate = new Date();\n    const currentHour = currectDate.getHours();\n    const currentMin = currectDate.getMinutes();\n    const currentSec = currectDate.getSeconds();\n    const modifiedDate = new Date(year, month, day, currentHour, currentMin, currentSec);\n    const modifiedData = { ...arg,\n      date: modifiedDate\n    };\n    setSelectedDay(modifiedData);\n    toggle();\n  };\n  /**\n   * Handling click on event on calendar\n   */\n\n\n  const handleEventClick = arg => {\n    const event = arg.event;\n    setEvent({\n      id: event.id,\n      title: event.title,\n      title_category: event.title_category,\n      start: event.start,\n      className: event.classNames,\n      category: event.classNames[0],\n      event_category: event.classNames[0]\n    });\n    setIsEdit(true);\n    toggle();\n  };\n  /**\n   * On delete event\n   */\n\n\n  const handleDeleteEvent = () => {\n    dispatch(onDeleteEvent(event));\n    setDeleteModal(false);\n    toggle();\n  };\n  /**\n   * On category darg event\n   */\n\n\n  const onDrag = event => {\n    event.preventDefault();\n  };\n  /**\n   * On calendar drop event\n   */\n\n\n  const onDrop = event => {\n    const date = event[\"date\"];\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const currectDate = new Date();\n    const currentHour = currectDate.getHours();\n    const currentMin = currectDate.getMinutes();\n    const currentSec = currectDate.getSeconds();\n    const modifiedDate = new Date(year, month, day, currentHour, currentMin, currentSec);\n    const draggedEl = event.draggedEl;\n    const draggedElclass = draggedEl.className;\n\n    if (draggedEl.classList.contains('external-event') && draggedElclass.indexOf(\"fc-event-draggable\") == -1) {\n      const modifiedData = {\n        id: Math.floor(Math.random() * 100),\n        title: draggedEl.innerText,\n        start: modifiedDate,\n        className: draggedEl.className\n      };\n      dispatch(onAddNewEvent(modifiedData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {\n      show: deleteModal,\n      onDeleteClick: handleDeleteEvent,\n      onCloseClick: () => setDeleteModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Minible\",\n          breadcrumbItem: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    className: \"d-grid\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      className: \"font-16 btn-block\",\n                      onClick: toggleCategory,\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-plus-circle-outline me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 25\n                      }, this), \"Create New Event\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      className: \"justify-content-center mt-5\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: Commingsoon,\n                        alt: \"\",\n                        className: \"img-fluid d-block\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"external-events\",\n                      className: \"m-t-20\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"Drag and drop your event or click in the calendar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 25\n                      }, this), categories && categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `${category.type} external-event text-white fc-event`,\n                        draggable: true,\n                        onDrag: event => onDrag(event, category),\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"mdi mdi-checkbox-blank-circle font-size-11 me-2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 31\n                        }, this), category.title]\n                      }, \"cat-\" + category.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                      className: \"activity-feed mb-0 ps-2 mt-4 ms-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"feed-item\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mt-0 mb-0\",\n                          children: \"Andrei Coman magna sed porta finibus, risus posted a new article: Forget UX Rowland\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"feed-item\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mt-0 mb-0\",\n                          children: \"Zack Wetass, sed porta finibus, risus Chris Wallace Commented Developer Moreno\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"feed-item\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mt-0 mb-0\",\n                          children: \"Zack Wetass, Chris combined Commented UX Murphy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-lg-9\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n                      plugins: [BootstrapTheme, dayGridPlugin, interactionPlugin],\n                      slotDuration: \"00:15:00\",\n                      handleWindowResize: true,\n                      themeSystem: \"bootstrap\",\n                      headerToolbar: {\n                        left: \"prev,next today\",\n                        center: \"title\",\n                        right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n                      },\n                      events: events,\n                      editable: true,\n                      droppable: true,\n                      selectable: true,\n                      dateClick: handleDateClick,\n                      eventClick: handleEventClick,\n                      drop: onDrop\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      isOpen: modal,\n                      className: props.className,\n                      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                        toggle: toggle,\n                        tag: \"h4\",\n                        children: !!isEdit ? \"Edit Event\" : \"Add Event\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          onSubmit: e => {\n                            e.preventDefault();\n                            validation.handleSubmit();\n                            return false;\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Row, {\n                            form: true,\n                            children: [/*#__PURE__*/_jsxDEV(Col, {\n                              className: \"col-12 mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                className: \"form-label\",\n                                children: \"Event Name\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 382,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"title\",\n                                type: \"text\",\n                                onChange: validation.handleChange,\n                                onBlur: validation.handleBlur,\n                                value: validation.values.title || \"\",\n                                invalid: validation.touched.title && validation.errors.title ? true : false\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 383,\n                                columnNumber: 29\n                              }, this), validation.touched.title && validation.errors.title ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                                type: \"invalid\",\n                                children: validation.errors.title\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 398,\n                                columnNumber: 31\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 381,\n                              columnNumber: 27\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              className: \"col-12 mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                className: \"form-label\",\n                                children: \"Select Category\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 404,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                type: \"select\",\n                                name: \"category\",\n                                onChange: validation.handleChange,\n                                onBlur: validation.handleBlur,\n                                value: validation.values.category || \"\",\n                                invalid: validation.touched.category && validation.errors.category ? true : false,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-danger\",\n                                  children: \"Danger\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 420,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-success\",\n                                  children: \"Success\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 421,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-primary\",\n                                  children: \"Primary\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 422,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-info\",\n                                  children: \"Info\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 423,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-dark\",\n                                  children: \"Dark\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 424,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-warning\",\n                                  children: \"Warning\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 425,\n                                  columnNumber: 31\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 407,\n                                columnNumber: 29\n                              }, this), validation.touched.category && validation.errors.category ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                                type: \"invalid\",\n                                children: validation.errors.category\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 429,\n                                columnNumber: 31\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 403,\n                              columnNumber: 27\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 380,\n                            columnNumber: 25\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"text-end\",\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"button\",\n                                  className: \"btn btn-light me-2\",\n                                  onClick: toggle,\n                                  children: \"Close\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 438,\n                                  columnNumber: 31\n                                }, this), !!isEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"button\",\n                                  className: \"btn btn-danger me-2\",\n                                  onClick: () => setDeleteModal(true),\n                                  children: \"Delete\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 446,\n                                  columnNumber: 33\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"submit\",\n                                  className: \"btn btn-success save-event\",\n                                  children: \"Save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 454,\n                                  columnNumber: 31\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 437,\n                                columnNumber: 29\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 436,\n                              columnNumber: 27\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 435,\n                            columnNumber: 25\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      isOpen: modalcategory,\n                      toggle: toggleCategory,\n                      className: props.className,\n                      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                        toggle: toggleCategory,\n                        tag: \"h4\",\n                        children: \"Add a category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 472,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          onSubmit: e => {\n                            e.preventDefault();\n                            categoryValidation.handleSubmit();\n                            return false;\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Row, {\n                            form: true,\n                            children: [/*#__PURE__*/_jsxDEV(Col, {\n                              className: \"col-12 mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                className: \"form-label\",\n                                children: \"Category Name\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 485,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"title\",\n                                type: \"text\",\n                                onChange: categoryValidation.handleChange,\n                                onBlur: categoryValidation.handleBlur,\n                                value: categoryValidation.values.title || \"\",\n                                invalid: categoryValidation.touched.title && categoryValidation.errors.title ? true : false\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 486,\n                                columnNumber: 29\n                              }, this), categoryValidation.touched.title && categoryValidation.errors.title ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                                type: \"invalid\",\n                                children: categoryValidation.errors.title\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 501,\n                                columnNumber: 31\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 484,\n                              columnNumber: 27\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              className: \"col-12 mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                className: \"form-label\",\n                                children: \"Select Category\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 507,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                type: \"select\",\n                                name: \"category\",\n                                onChange: categoryValidation.handleChange,\n                                onBlur: categoryValidation.handleBlur,\n                                value: categoryValidation.values.category || \"\",\n                                invalid: categoryValidation.touched.category && categoryValidation.errors.category ? true : false,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-danger\",\n                                  children: \"Danger\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 523,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-success\",\n                                  children: \"Success\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 524,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-primary\",\n                                  children: \"Primary\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 525,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-info\",\n                                  children: \"Info\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 526,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-dark\",\n                                  children: \"Dark\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 527,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"bg-warning\",\n                                  children: \"Warning\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 528,\n                                  columnNumber: 31\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 510,\n                                columnNumber: 29\n                              }, this), categoryValidation.touched.category && categoryValidation.errors.category ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                                type: \"invalid\",\n                                children: categoryValidation.errors.category\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 532,\n                                columnNumber: 31\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 506,\n                              columnNumber: 27\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 25\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"text-end\",\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"button\",\n                                  className: \"btn btn-light me-2\",\n                                  onClick: toggleCategory,\n                                  children: \"Close\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 541,\n                                  columnNumber: 31\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"submit\",\n                                  className: \"btn btn-success save-event\",\n                                  children: \"Save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 548,\n                                  columnNumber: 31\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 540,\n                                columnNumber: 29\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 539,\n                              columnNumber: 27\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 538,\n                            columnNumber: 25\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"KYryEuGQtJEeWzXp4RHinYafNk4=\", false, function () {\n  return [useDispatch, useFormik, useFormik, useSelector];\n});\n\n_c = Calender;\nCalender.propTypes = {\n  events: PropTypes.array,\n  categories: PropTypes.array,\n  className: PropTypes.string,\n  onGetEvents: PropTypes.func,\n  onAddNewEvent: PropTypes.func,\n  onUpdateEvent: PropTypes.func,\n  onDeleteEvent: PropTypes.func,\n  onGetCategories: PropTypes.func\n};\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/pages/Calendar/index.js"],"names":["React","useEffect","useState","PropTypes","isEmpty","Button","Card","CardBody","Col","Container","Form","FormFeedback","Input","Label","Modal","ModalBody","ModalHeader","Row","Yup","useFormik","Commingsoon","FullCalendar","dayGridPlugin","interactionPlugin","Draggable","BootstrapTheme","Breadcrumbs","addNewEvent","onAddNewEvent","deleteEvent","onDeleteEvent","getCategories","onGetCategories","getEvents","onGetEvents","updateEvent","onUpdateEvent","DeleteModal","useSelector","useDispatch","Calender","props","dispatch","event","setEvent","validation","enableReinitialize","initialValues","title","category","validationSchema","object","string","required","onSubmit","values","isEdit","id","classNames","start","resetForm","newEvent","Math","floor","random","selectedDay","date","Date","className","setSelectedDay","toggle","categoryValidation","event_category","toggleCategory","events","categories","state","calendar","modal","setModal","deleteModal","setDeleteModal","modalcategory","setModalcategory","setIsEdit","document","getElementById","itemSelector","setTimeout","handleDateClick","arg","day","getDate","month","getMonth","year","getFullYear","currectDate","currentHour","getHours","currentMin","getMinutes","currentSec","getSeconds","modifiedDate","modifiedData","handleEventClick","title_category","handleDeleteEvent","onDrag","preventDefault","onDrop","draggedEl","draggedElclass","classList","contains","indexOf","innerText","map","i","type","left","center","right","e","handleSubmit","handleChange","handleBlur","touched","errors","propTypes","array","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmpty } from \"lodash\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  FormFeedback,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Row,\n} from \"reactstrap\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n//import images\nimport Commingsoon from \"../../assets/images/coming-soon-img.png\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport BootstrapTheme from \"@fullcalendar/bootstrap\";\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\n\nimport {\n  addNewEvent as onAddNewEvent,\n  deleteEvent as onDeleteEvent,\n  getCategories as onGetCategories,\n  getEvents as onGetEvents,\n  updateEvent as onUpdateEvent,\n} from \"../../store/actions\";\n\nimport DeleteModal from \"./DeleteModal\";\n\n//css\nimport \"@fullcalendar/bootstrap/main.css\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Calender = (props) => {\n  const dispatch = useDispatch();\n\n  const [event, setEvent] = useState({});\n\n  // events validation\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      title: (event && event.title) || \"\",\n      category: (event && event.category) || \"\",\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required(\"Please Enter Your Event Name\"),\n      category: Yup.string().required(\"Please Select Your Category\"),\n    }),\n    onSubmit: (values) => {\n      if (isEdit) {\n        const updateEvent = {\n          id: event.id,\n          title: values.title,\n          classNames: values.category + \" text-white\",\n          start: event.start,\n        };\n        // update event\n        dispatch(onUpdateEvent(updateEvent));\n        validation.resetForm();\n      } else {\n        const newEvent = {\n          id: Math.floor(Math.random() * 100),\n          title: values[\"title\"],\n          start: selectedDay ? selectedDay.date : new Date(),\n          className: values.category + \" text-white\",\n        };\n        // save new event\n        dispatch(onAddNewEvent(newEvent));\n        validation.resetForm();\n      }\n      setSelectedDay(null);\n      toggle();\n    },\n  });\n\n  // category validation\n  const categoryValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      title: (event && event.title) || \"\",\n      category: (event && event.category) || \"\",\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required(\"Please Enter Your Order Id\"),\n      category: Yup.string().required(\"Please Enter Your Billing Name\"),\n    }),\n    onSubmit: (values) => {\n    \n      const newEvent = {\n        id: Math.floor(Math.random() * 100),\n        title: values[\"title\"],\n        start: selectedDay ? selectedDay.date : new Date(),\n        className: values.event_category\n          ? values.event_category + \" text-white\"\n          : \"bg-danger text-white\",\n      };\n      // save new event\n\n      dispatch(onAddNewEvent(newEvent));\n      toggleCategory();\n    },\n  });\n\n  const { events, categories } = useSelector((state) => ({\n    events: state.calendar.events,\n    categories: state.calendar.categories,\n  }));\n\n  const [modal, setModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [modalcategory, setModalcategory] = useState(false);\n\n  const [selectedDay, setSelectedDay] = useState(0);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    dispatch(onGetCategories());\n    dispatch(onGetEvents());\n    new Draggable(document.getElementById(\"external-events\"), {\n      itemSelector: \".external-event\",\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!modal && !isEmpty(event) && !!isEdit) {\n      setTimeout(() => {\n        setEvent({});\n        setIsEdit(false);\n      }, 700);\n    }\n  }, [modal, event]);\n\n  /**\n   * Handling the modal state\n   */\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setEvent(null);\n      setIsEdit(false);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const toggleCategory = () => {\n    setModalcategory(!modalcategory);\n  };\n\n  /**\n   * Handling date click on calendar\n   */\n  const handleDateClick = (arg) => {\n    const date = arg[\"date\"];\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n\n    const currectDate = new Date();\n    const currentHour = currectDate.getHours();\n    const currentMin = currectDate.getMinutes();\n    const currentSec = currectDate.getSeconds();\n    const modifiedDate = new Date(\n      year,\n      month,\n      day,\n      currentHour,\n      currentMin,\n      currentSec\n    );\n    const modifiedData = { ...arg, date: modifiedDate };\n\n    setSelectedDay(modifiedData);\n    toggle();\n  };\n\n  /**\n   * Handling click on event on calendar\n   */\n  const handleEventClick = (arg) => {\n    const event = arg.event;\n    setEvent({\n      id: event.id,\n      title: event.title,\n      title_category: event.title_category,\n      start: event.start,\n      className: event.classNames,\n      category: event.classNames[0],\n      event_category: event.classNames[0],\n    });\n    setIsEdit(true);\n    toggle();\n  };\n\n  /**\n   * On delete event\n   */\n  const handleDeleteEvent = () => {\n    dispatch(onDeleteEvent(event));\n    setDeleteModal(false);\n    toggle();\n  };\n\n  /**\n   * On category darg event\n   */\n  const onDrag = (event) => {\n    event.preventDefault();\n  };\n\n\n  /**\n   * On calendar drop event\n   */\n  const onDrop = (event) => {\n   \n    const date = event[\"date\"];\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n\n    const currectDate = new Date();\n    const currentHour = currectDate.getHours();\n    const currentMin = currectDate.getMinutes();\n    const currentSec = currectDate.getSeconds();\n    const modifiedDate = new Date(\n      year,\n      month,\n      day,\n      currentHour,\n      currentMin,\n      currentSec\n    );\n\n    const draggedEl = event.draggedEl;\n\n    const draggedElclass = draggedEl.className;\n\n    if(draggedEl.classList.contains('external-event') && draggedElclass.indexOf(\"fc-event-draggable\") == -1){\n      const modifiedData = {\n        id: Math.floor(Math.random() * 100),\n        title: draggedEl.innerText,\n        start: modifiedDate,\n        className: draggedEl.className,\n      };\n      \n      dispatch(onAddNewEvent(modifiedData));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <DeleteModal\n        show={deleteModal}\n        onDeleteClick={handleDeleteEvent}\n        onCloseClick={() => setDeleteModal(false)}\n      />\n      <div className=\"page-content\">\n        <Container fluid={true}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs title=\"Minible\" breadcrumbItem=\"Calendar\" />\n          <Row>\n            <Col className=\"col-12\">\n              <Row>\n                <Col lg={3}>\n                  <Card>\n                    <CardBody className=\"d-grid\">\n                      <Button\n                        color=\"primary\"\n                        className=\"font-16 btn-block\"\n                        onClick={toggleCategory}\n                      >\n                        <i className=\"mdi mdi-plus-circle-outline me-1\" />\n                        Create New Event\n                      </Button>\n                      <Row className=\"justify-content-center mt-5\">\n                        <img\n                          src={Commingsoon}\n                          alt=\"\"\n                          className=\"img-fluid d-block\"\n                        />\n                      </Row>\n                      <div id=\"external-events\" className=\"m-t-20\">\n                        <p className=\"text-muted\">\n                          Drag and drop your event or click in the calendar\n                        </p>\n                        {categories &&\n                          categories.map((category, i) => (\n                            <div\n                              className={`${category.type} external-event text-white fc-event`}\n                              key={\"cat-\" + category.id}\n                              draggable\n                              onDrag={(event) => onDrag(event, category)}\n                            >\n                              <i className=\"mdi mdi-checkbox-blank-circle font-size-11 me-2\" />\n                              {category.title}\n                            </div>\n                          ))}\n                      </div>\n\n                      <ol className=\"activity-feed mb-0 ps-2 mt-4 ms-1\">\n                        <li className=\"feed-item\">\n                          <p className=\"mt-0 mb-0\">\n                            Andrei Coman magna sed porta finibus, risus posted a\n                            new article: Forget UX Rowland\n                          </p>\n                        </li>\n                        <li className=\"feed-item\">\n                          <p className=\"mt-0 mb-0\">\n                            Zack Wetass, sed porta finibus, risus Chris Wallace\n                            Commented Developer Moreno\n                          </p>\n                        </li>\n                        <li className=\"feed-item\">\n                          <p className=\"mt-0 mb-0\">\n                            Zack Wetass, Chris combined Commented UX Murphy\n                          </p>\n                        </li>\n                      </ol>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col className=\"col-lg-9\">\n                    <Card>\n                    <CardBody>\n                  {/* fullcalendar control */}\n                  <FullCalendar\n                    plugins={[BootstrapTheme, dayGridPlugin, interactionPlugin]}\n                    slotDuration={\"00:15:00\"}\n                    handleWindowResize={true}\n                    themeSystem=\"bootstrap\"\n                    headerToolbar={{\n                      left: \"prev,next today\",\n                      center: \"title\",\n                      right: \"dayGridMonth,dayGridWeek,dayGridDay\",\n                    }}\n                    events={events}\n                    editable={true}\n                    droppable={true}\n                    selectable={true}\n                    dateClick={handleDateClick}\n                    eventClick={handleEventClick}\n                    drop={onDrop}\n                  />\n\n                  {/* New/Edit event modal */}\n                  <Modal isOpen={modal} className={props.className}>\n                    <ModalHeader toggle={toggle} tag=\"h4\">\n                      {!!isEdit ? \"Edit Event\" : \"Add Event\"}\n                    </ModalHeader>\n                    <ModalBody>\n                      <Form\n                        onSubmit={(e) => {\n                          e.preventDefault();\n                          validation.handleSubmit();\n                          return false;\n                        }}\n                      >\n                        <Row form>\n                          <Col className=\"col-12 mb-3\">\n                            <Label className=\"form-label\">Event Name</Label>\n                            <Input\n                              name=\"title\"\n                              type=\"text\"\n                              onChange={validation.handleChange}\n                              onBlur={validation.handleBlur}\n                              value={validation.values.title || \"\"}\n                              invalid={\n                                validation.touched.title &&\n                                validation.errors.title\n                                  ? true\n                                  : false\n                              }\n                            />\n                            {validation.touched.title &&\n                            validation.errors.title ? (\n                              <FormFeedback type=\"invalid\">\n                                {validation.errors.title}\n                              </FormFeedback>\n                            ) : null}\n                          </Col>\n                          <Col className=\"col-12 mb-3\">\n                            <Label className=\"form-label\">\n                              Select Category\n                            </Label>\n                            <Input\n                              type=\"select\"\n                              name=\"category\"\n                              onChange={validation.handleChange}\n                              onBlur={validation.handleBlur}\n                              value={validation.values.category || \"\"}\n                              invalid={\n                                validation.touched.category &&\n                                validation.errors.category\n                                  ? true\n                                  : false\n                              }\n                            >\n                              <option value=\"bg-danger\">Danger</option>\n                              <option value=\"bg-success\">Success</option>\n                              <option value=\"bg-primary\">Primary</option>\n                              <option value=\"bg-info\">Info</option>\n                              <option value=\"bg-dark\">Dark</option>\n                              <option value=\"bg-warning\">Warning</option>\n                            </Input>\n                            {validation.touched.category &&\n                            validation.errors.category ? (\n                              <FormFeedback type=\"invalid\">\n                                {validation.errors.category}\n                              </FormFeedback>\n                            ) : null}\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <div className=\"text-end\">\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-light me-2\"\n                                onClick={toggle}\n                              >\n                                Close\n                              </button>\n                              {!!isEdit && (\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-danger me-2\"\n                                  onClick={() => setDeleteModal(true)}\n                                >\n                                  Delete\n                                </button>\n                              )}\n                              <button\n                                type=\"submit\"\n                                className=\"btn btn-success save-event\"\n                              >\n                                Save\n                              </button>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </ModalBody>\n                  </Modal>\n\n                  <Modal\n                    isOpen={modalcategory}\n                    toggle={toggleCategory}\n                    className={props.className}\n                  >\n                    <ModalHeader toggle={toggleCategory} tag=\"h4\">\n                      Add a category\n                    </ModalHeader>\n                    <ModalBody>\n                      <Form\n                        onSubmit={(e) => {\n                          e.preventDefault();\n                          categoryValidation.handleSubmit();\n                          return false;\n                        }}\n                      >\n                        <Row form>\n                          <Col className=\"col-12 mb-3\">\n                            <Label className=\"form-label\">Category Name</Label>\n                            <Input\n                              name=\"title\"\n                              type=\"text\"\n                              onChange={categoryValidation.handleChange}\n                              onBlur={categoryValidation.handleBlur}\n                              value={categoryValidation.values.title || \"\"}\n                              invalid={\n                                categoryValidation.touched.title &&\n                                categoryValidation.errors.title\n                                  ? true\n                                  : false\n                              }\n                            />\n                            {categoryValidation.touched.title &&\n                            categoryValidation.errors.title ? (\n                              <FormFeedback type=\"invalid\">\n                                {categoryValidation.errors.title}\n                              </FormFeedback>\n                            ) : null}\n                          </Col>\n                          <Col className=\"col-12 mb-3\">\n                            <Label className=\"form-label\">\n                              Select Category\n                            </Label>\n                            <Input\n                              type=\"select\"\n                              name=\"category\"\n                              onChange={categoryValidation.handleChange}\n                              onBlur={categoryValidation.handleBlur}\n                              value={categoryValidation.values.category || \"\"}\n                              invalid={\n                                categoryValidation.touched.category &&\n                                categoryValidation.errors.category\n                                  ? true\n                                  : false\n                              }\n                            >\n                              <option value=\"bg-danger\">Danger</option>\n                              <option value=\"bg-success\">Success</option>\n                              <option value=\"bg-primary\">Primary</option>\n                              <option value=\"bg-info\">Info</option>\n                              <option value=\"bg-dark\">Dark</option>\n                              <option value=\"bg-warning\">Warning</option>\n                            </Input>\n                            {categoryValidation.touched.category &&\n                            categoryValidation.errors.category ? (\n                              <FormFeedback type=\"invalid\">\n                                {categoryValidation.errors.category}\n                              </FormFeedback>\n                            ) : null}\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <div className=\"text-end\">\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-light me-2\"\n                                onClick={toggleCategory}\n                              >\n                                Close\n                              </button>\n                              <button\n                                type=\"submit\"\n                                className=\"btn btn-success save-event\"\n                              >\n                                Save\n                              </button>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </ModalBody>\n                  </Modal>\n                </CardBody>\n                </Card>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCalender.propTypes = {\n  events: PropTypes.array,\n  categories: PropTypes.array,\n  className: PropTypes.string,\n  onGetEvents: PropTypes.func,\n  onAddNewEvent: PropTypes.func,\n  onUpdateEvent: PropTypes.func,\n  onDeleteEvent: PropTypes.func,\n  onGetCategories: PropTypes.func,\n};\n\nexport default Calender;"]},"metadata":{},"sourceType":"module"}