{"ast":null,"code":"import { GET_EVENTS, GET_EVENTS_FAIL, GET_EVENTS_SUCCESS, ADD_NEW_EVENT, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL, UPDATE_EVENT, UPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL, RESET_CALENDAR } from \"./actionTypes\";\nexport const getEvents = () => ({\n  type: GET_EVENTS\n});\nexport const getEventsSuccess = events => ({\n  type: GET_EVENTS_SUCCESS,\n  payload: events\n});\nexport const getEventsFail = error => ({\n  type: GET_EVENTS_FAIL,\n  payload: error\n});\nexport const addNewEvent = event => ({\n  type: ADD_NEW_EVENT,\n  payload: event\n});\nexport const addEventSuccess = event => ({\n  type: ADD_EVENT_SUCCESS,\n  payload: event\n});\nexport const addEventFail = error => ({\n  type: ADD_EVENT_FAIL,\n  payload: error\n});\nexport const updateEvent = event => ({\n  type: UPDATE_EVENT,\n  payload: event\n});\nexport const updateEventSuccess = event => ({\n  type: UPDATE_EVENT_SUCCESS,\n  payload: event\n});\nexport const updateEventFail = error => ({\n  type: UPDATE_EVENT_FAIL,\n  payload: error\n});\nexport const deleteEvent = event => ({\n  type: DELETE_EVENT,\n  payload: event\n});\nexport const deleteEventSuccess = event => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: event\n});\nexport const deleteEventFail = error => ({\n  type: DELETE_EVENT_FAIL,\n  payload: error\n});\nexport const getCategories = () => ({\n  type: GET_CATEGORIES\n});\nexport const getCategoriesSuccess = categories => ({\n  type: GET_CATEGORIES_SUCCESS,\n  payload: categories\n});\nexport const getCategoriesFail = error => ({\n  type: GET_CATEGORIES_FAIL,\n  payload: error\n});\nexport const resetCalendar = (flag, value) => ({\n  type: RESET_CALENDAR,\n  payload: {\n    flag,\n    value\n  }\n});","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/store/calendar/actions.js"],"names":["GET_EVENTS","GET_EVENTS_FAIL","GET_EVENTS_SUCCESS","ADD_NEW_EVENT","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","UPDATE_EVENT","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","RESET_CALENDAR","getEvents","type","getEventsSuccess","events","payload","getEventsFail","error","addNewEvent","event","addEventSuccess","addEventFail","updateEvent","updateEventSuccess","updateEventFail","deleteEvent","deleteEventSuccess","deleteEventFail","getCategories","getCategoriesSuccess","categories","getCategoriesFail","resetCalendar","flag","value"],"mappings":"AAAA,SACEA,UADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,oBARF,EASEC,iBATF,EAUEC,YAVF,EAWEC,oBAXF,EAYEC,iBAZF,EAaEC,cAbF,EAcEC,sBAdF,EAeEC,mBAfF,EAgBEC,cAhBF,QAiBO,eAjBP;AAmBA,OAAO,MAAMC,SAAS,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAEjB;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMkB,gBAAgB,GAAGC,MAAM,KAAK;AACzCF,EAAAA,IAAI,EAAEf,kBADmC;AAEzCkB,EAAAA,OAAO,EAAED;AAFgC,CAAL,CAA/B;AAKP,OAAO,MAAME,aAAa,GAAGC,KAAK,KAAK;AACrCL,EAAAA,IAAI,EAAEhB,eAD+B;AAErCmB,EAAAA,OAAO,EAAEE;AAF4B,CAAL,CAA3B;AAKP,OAAO,MAAMC,WAAW,GAAGC,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAEd,aAD6B;AAEnCiB,EAAAA,OAAO,EAAEI;AAF0B,CAAL,CAAzB;AAKP,OAAO,MAAMC,eAAe,GAAGD,KAAK,KAAK;AACvCP,EAAAA,IAAI,EAAEb,iBADiC;AAEvCgB,EAAAA,OAAO,EAAEI;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAME,YAAY,GAAGJ,KAAK,KAAK;AACpCL,EAAAA,IAAI,EAAEZ,cAD8B;AAEpCe,EAAAA,OAAO,EAAEE;AAF2B,CAAL,CAA1B;AAKP,OAAO,MAAMK,WAAW,GAAGH,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAEX,YAD6B;AAEnCc,EAAAA,OAAO,EAAEI;AAF0B,CAAL,CAAzB;AAKP,OAAO,MAAMI,kBAAkB,GAAGJ,KAAK,KAAK;AAC1CP,EAAAA,IAAI,EAAEV,oBADoC;AAE1Ca,EAAAA,OAAO,EAAEI;AAFiC,CAAL,CAAhC;AAKP,OAAO,MAAMK,eAAe,GAAGP,KAAK,KAAK;AACvCL,EAAAA,IAAI,EAAET,iBADiC;AAEvCY,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMQ,WAAW,GAAGN,KAAK,KAAK;AACnCP,EAAAA,IAAI,EAAER,YAD6B;AAEnCW,EAAAA,OAAO,EAAEI;AAF0B,CAAL,CAAzB;AAKP,OAAO,MAAMO,kBAAkB,GAAGP,KAAK,KAAK;AAC1CP,EAAAA,IAAI,EAAEP,oBADoC;AAE1CU,EAAAA,OAAO,EAAEI;AAFiC,CAAL,CAAhC;AAKP,OAAO,MAAMQ,eAAe,GAAGV,KAAK,KAAK;AACvCL,EAAAA,IAAI,EAAEN,iBADiC;AAEvCS,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMW,aAAa,GAAG,OAAO;AAClChB,EAAAA,IAAI,EAAEL;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMsB,oBAAoB,GAAGC,UAAU,KAAK;AACjDlB,EAAAA,IAAI,EAAEJ,sBAD2C;AAEjDO,EAAAA,OAAO,EAAEe;AAFwC,CAAL,CAAvC;AAKP,OAAO,MAAMC,iBAAiB,GAAGd,KAAK,KAAK;AACzCL,EAAAA,IAAI,EAAEH,mBADmC;AAEzCM,EAAAA,OAAO,EAAEE;AAFgC,CAAL,CAA/B;AAKP,OAAO,MAAMe,aAAa,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;AAC7CtB,EAAAA,IAAI,EAAEF,cADuC;AAE7CK,EAAAA,OAAO,EAAE;AAACkB,IAAAA,IAAD;AAAOC,IAAAA;AAAP;AAFoC,CAAlB,CAAtB","sourcesContent":["import {\n  GET_EVENTS,\n  GET_EVENTS_FAIL,\n  GET_EVENTS_SUCCESS,\n  ADD_NEW_EVENT,\n  ADD_EVENT_SUCCESS,\n  ADD_EVENT_FAIL,\n  UPDATE_EVENT,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  DELETE_EVENT,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAIL,\n  GET_CATEGORIES,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAIL,\n  RESET_CALENDAR\n} from \"./actionTypes\";\n\nexport const getEvents = () => ({\n  type: GET_EVENTS,\n});\n\nexport const getEventsSuccess = events => ({\n  type: GET_EVENTS_SUCCESS,\n  payload: events,\n});\n\nexport const getEventsFail = error => ({\n  type: GET_EVENTS_FAIL,\n  payload: error,\n});\n\nexport const addNewEvent = event => ({\n  type: ADD_NEW_EVENT,\n  payload: event,\n});\n\nexport const addEventSuccess = event => ({\n  type: ADD_EVENT_SUCCESS,\n  payload: event,\n});\n\nexport const addEventFail = error => ({\n  type: ADD_EVENT_FAIL,\n  payload: error,\n});\n\nexport const updateEvent = event => ({\n  type: UPDATE_EVENT,\n  payload: event,\n});\n\nexport const updateEventSuccess = event => ({\n  type: UPDATE_EVENT_SUCCESS,\n  payload: event,\n});\n\nexport const updateEventFail = error => ({\n  type: UPDATE_EVENT_FAIL,\n  payload: error,\n});\n\nexport const deleteEvent = event => ({\n  type: DELETE_EVENT,\n  payload: event,\n});\n\nexport const deleteEventSuccess = event => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: event,\n});\n\nexport const deleteEventFail = error => ({\n  type: DELETE_EVENT_FAIL,\n  payload: error,\n});\n\nexport const getCategories = () => ({\n  type: GET_CATEGORIES,\n});\n\nexport const getCategoriesSuccess = categories => ({\n  type: GET_CATEGORIES_SUCCESS,\n  payload: categories,\n});\n\nexport const getCategoriesFail = error => ({\n  type: GET_CATEGORIES_FAIL,\n  payload: error,\n});\n\nexport const resetCalendar = (flag, value) => ({\n  type: RESET_CALENDAR,\n  payload: {flag, value},\n});\n\n\n"]},"metadata":{},"sourceType":"module"}