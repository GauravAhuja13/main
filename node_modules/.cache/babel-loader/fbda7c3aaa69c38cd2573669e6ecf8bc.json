{"ast":null,"code":"var _jsxFileName = \"/home/happy/Downloads/main-main/src/pages/Ecommerce/EcommerceCustomers/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableContainer from \"../../../components/Common/TableContainer\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //import components\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { getCustomers as onGetCustomers, addNewCustomer as onAddNewCustomer, updateCustomer as onUpdateCustomer, deleteCustomer as onDeleteCustomer } from \"../../../store/actions\";\nimport { CustomerId, CustomerName, Date, Email, CustomerStatus } from \"./EcommerceCustomerCol\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row, UncontrolledTooltip, Modal, ModalHeader, ModalBody, Form, Input, FormFeedback, Label } from \"reactstrap\";\nimport DeleteModal from \"../../../components/Common/DeleteModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DatatableTables() {\n  _s();\n\n  const [modal, setModal] = useState(false); // const [modal1, setModal1] = useState(false);\n\n  const [isEdit, setIsEdit] = useState(false);\n  const [customerList, setCustomerList] = useState([]);\n  const [customer, setCustomer] = useState([]); // validation\n\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      customerid: customer && customer.customerid || \"\",\n      customerName: customer && customer.customerName || \"\",\n      joiningDate: customer && customer.joiningDate || \"\",\n      email: customer && customer.email || \"\",\n      customerStatus: customer && customer.customerStatus || \"Active\",\n      badgeclass: customer && customer.badgeclass || \"success\"\n    },\n    validationSchema: Yup.object({\n      customerid: Yup.string().required(\"Please Enter Your Order Id\"),\n      customerName: Yup.string().required(\"Please Enter Your Billing Name\"),\n      joiningDate: Yup.string().required(\"Please Enter Your Order Date\"),\n      email: Yup.string().required(\"Total Amount\"),\n      customerStatus: Yup.string().required(\"Please Enter Your Payment Status\"),\n      badgeclass: Yup.string().required(\"Please Enter Your Badge Class\")\n    }),\n    onSubmit: values => {\n      if (isEdit) {\n        const updateCustomer = {\n          id: customer ? customer.id : 0,\n          customerid: values.customerid,\n          customerName: values.customerName,\n          joiningDate: values.joiningDate,\n          email: values.email,\n          customerStatus: values.customerStatus,\n          badgeclass: values.badgeclass\n        }; // update customer\n\n        dispatch(onUpdateCustomer(updateCustomer));\n        validation.resetForm();\n      } else {\n        const newCustomer = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          customerid: values[\"customerid\"],\n          customerName: values[\"customerName\"],\n          joiningDate: values[\"joiningDate\"],\n          email: values[\"email\"],\n          customerStatus: values[\"customerStatus\"],\n          badgeclass: values[\"badgeclass\"]\n        }; // save new customer\n\n        dispatch(onAddNewCustomer(newCustomer));\n        validation.resetForm();\n      }\n\n      toggle();\n    }\n  }); // const toggleViewModal = () => setModal1(!modal1);\n\n  const dispatch = useDispatch();\n  const {\n    customers\n  } = useSelector(state => ({\n    customers: state.ecommerce.customers\n  }));\n  useEffect(() => {\n    if (customers && !customers.length) {\n      dispatch(onGetCustomers());\n    }\n  }, [dispatch, customers]);\n  useEffect(() => {\n    if (customers && !customers.length) {\n      dispatch(onGetCustomers());\n    }\n  }, [dispatch, customers]);\n  useEffect(() => {\n    setCustomerList(customers);\n  }, [customer]);\n  useEffect(() => {\n    if (!isEmpty(customers) && !!isEdit) {\n      setCustomerList(customers);\n      setIsEdit(false);\n    }\n  }, [customers]);\n\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setCustomer(null);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const handleCustomerClick = arg => {\n    const customer = arg;\n    setCustomer({\n      id: customer.id,\n      customerid: customer.customerid,\n      customerName: customer.customerName,\n      joiningDate: customer.joiningDate,\n      email: customer.email,\n      customerStatus: customer.customerStatus,\n      badgeclass: customer.badgeclass\n    });\n    setIsEdit(true);\n    toggle();\n  }; //delete customer\n\n\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onClickDelete = customer => {\n    setCustomer(customer);\n    setDeleteModal(true);\n  };\n\n  const handleDeleteCustomer = () => {\n    if (customer.id) {\n      dispatch(onDeleteCustomer(customer));\n      setDeleteModal(false);\n    }\n  };\n\n  const handleCustomerClicks = () => {\n    setCustomerList(\"\");\n    setIsEdit(false);\n    toggle();\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Id\",\n    accessor: \"checkbox\",\n    disableFilters: true,\n    filterable: false,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"selection-input-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Customer ID\",\n    accessor: \"customerid\",\n    disableGlobalFilter: true,\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(CustomerId, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Customer\",\n    accessor: \"customerName\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(CustomerName, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Email\",\n    accessor: \"email\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(Email, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Status\",\n    accessor: \"customerStatus\",\n    filterable: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(CustomerStatus, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Join Date\",\n    accessor: \"joiningDate\",\n    filterable: true,\n    // formatter: (cellContent, row) => handleValidDate(row.joiningDate),\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(Date, { ...cellProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: \"Action\",\n    accessor: \"action\",\n    disableFilters: true,\n    Cell: cellProps => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-primary\",\n          onClick: () => {\n            const customerData = cellProps.row.original;\n            handleCustomerClick(customerData);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"uil uil-pen font-size-18\",\n            id: \"edittooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n            placement: \"top\",\n            target: \"edittooltip\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-danger\",\n          onClick: () => {\n            const customerData = cellProps.row.original;\n            onClickDelete(customerData);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"uil uil-trash-alt font-size-18\",\n            id: \"deletetooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n            placement: \"top\",\n            target: \"deletetooltip\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {\n      show: deleteModal,\n      onDeleteClick: handleDeleteCustomer,\n      onCloseClick: () => setDeleteModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Ecommerce\",\n          breadcrumbItem: \"Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              columns: columns,\n              data: customers,\n              isGlobalFilter: true,\n              isAddCustomer: true,\n              isAddTableBorderStrap: true,\n              handleCustomerClicks: handleCustomerClicks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal,\n          toggle: toggle,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggle,\n            tag: \"h4\",\n            children: !!isEdit ? \"Edit Customer\" : \"Add Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => {\n                e.preventDefault();\n                validation.handleSubmit();\n                return false;\n              },\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                form: true,\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Customer Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"customerid\",\n                      type: \"text\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.customerid || \"\",\n                      invalid: validation.touched.customerid && validation.errors.customerid ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, this), validation.touched.customerid && validation.errors.customerid ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.customerid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Customer Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"customerName\",\n                      type: \"text\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.customerName || \"\",\n                      invalid: validation.touched.customerName && validation.errors.customerName ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 23\n                    }, this), validation.touched.customerName && validation.errors.customerName ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.customerName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"email\",\n                      type: \"text\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.email || \"\",\n                      invalid: validation.touched.email && validation.errors.email ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 23\n                    }, this), validation.touched.email && validation.errors.email ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Customer Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"customerStatus\",\n                      type: \"select\",\n                      className: \"form-select\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.customerStatus || \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Active\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Deactive\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this), validation.touched.customerStatus && validation.errors.customerStatus ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.customerStatus\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Joining Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"joiningDate\",\n                      type: \"date\" // value={customerList.joiningDate || \"\"}\n                      ,\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.joiningDate || \"\",\n                      invalid: validation.touched.joiningDate && validation.errors.joiningDate ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this), validation.touched.joiningDate && validation.errors.joiningDate ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validation.errors.joiningDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Badge Class\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"badgeclass\",\n                      type: \"select\",\n                      className: \"form-select\",\n                      onChange: validation.handleChange,\n                      onBlur: validation.handleBlur,\n                      value: validation.values.badgeclass || \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success save-user\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DatatableTables, \"OzU2nGST1n71tr/LkrasOPjs2No=\", false, function () {\n  return [useFormik, useDispatch, useSelector];\n});\n\n_c = DatatableTables;\nDatatableTables.propTypes = {\n  preGlobalFilteredRows: PropTypes.any\n};\nexport default DatatableTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatatableTables\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/pages/Ecommerce/EcommerceCustomers/index.js"],"names":["React","useEffect","useMemo","useState","PropTypes","Link","isEmpty","TableContainer","Yup","useFormik","Breadcrumbs","getCustomers","onGetCustomers","addNewCustomer","onAddNewCustomer","updateCustomer","onUpdateCustomer","deleteCustomer","onDeleteCustomer","CustomerId","CustomerName","Date","Email","CustomerStatus","useSelector","useDispatch","Col","Row","UncontrolledTooltip","Modal","ModalHeader","ModalBody","Form","Input","FormFeedback","Label","DeleteModal","DatatableTables","modal","setModal","isEdit","setIsEdit","customerList","setCustomerList","customer","setCustomer","validation","enableReinitialize","initialValues","customerid","customerName","joiningDate","email","customerStatus","badgeclass","validationSchema","object","string","required","onSubmit","values","id","dispatch","resetForm","newCustomer","Math","floor","random","toggle","customers","state","ecommerce","length","handleCustomerClick","arg","deleteModal","setDeleteModal","onClickDelete","handleDeleteCustomer","handleCustomerClicks","columns","Header","accessor","disableFilters","filterable","Cell","cellProps","disableGlobalFilter","customerData","row","original","e","preventDefault","handleSubmit","handleChange","handleBlur","touched","errors","value","propTypes","preGlobalFilteredRows","any"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAO,sCAAP;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,SACEC,YAAY,IAAIC,cADlB,EAEEC,cAAc,IAAIC,gBAFpB,EAGEC,cAAc,IAAIC,gBAHpB,EAIEC,cAAc,IAAIC,gBAJpB,QAKO,wBALP;AAOA,SACEC,UADF,EAEEC,YAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,cALF,QAMO,wBANP,C,CAQA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,mBAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,KARF,EASEC,YATF,EAUEC,KAVF,QAWO,YAXP;AAYA,OAAOC,WAAP,MAAwB,wCAAxB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,KAAD,CAAlC,CADyB,CAEzB;;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAACuC,YAAD,EAAeC,eAAf,IAAkCxC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyC,QAAD,EAAWC,WAAX,IAA0B1C,QAAQ,CAAC,EAAD,CAAxC,CANyB,CAQzB;;AACA,QAAM2C,UAAU,GAAGrC,SAAS,CAAC;AAC3B;AACAsC,IAAAA,kBAAkB,EAAE,IAFO;AAI3BC,IAAAA,aAAa,EAAE;AACbC,MAAAA,UAAU,EAAGL,QAAQ,IAAIA,QAAQ,CAACK,UAAtB,IAAqC,EADpC;AAEbC,MAAAA,YAAY,EAAGN,QAAQ,IAAIA,QAAQ,CAACM,YAAtB,IAAuC,EAFxC;AAGbC,MAAAA,WAAW,EAAGP,QAAQ,IAAIA,QAAQ,CAACO,WAAtB,IAAsC,EAHtC;AAIbC,MAAAA,KAAK,EAAGR,QAAQ,IAAIA,QAAQ,CAACQ,KAAtB,IAAgC,EAJ1B;AAKbC,MAAAA,cAAc,EAAGT,QAAQ,IAAIA,QAAQ,CAACS,cAAtB,IAAyC,QAL5C;AAMbC,MAAAA,UAAU,EAAGV,QAAQ,IAAIA,QAAQ,CAACU,UAAtB,IAAqC;AANpC,KAJY;AAY3BC,IAAAA,gBAAgB,EAAE/C,GAAG,CAACgD,MAAJ,CAAW;AAC3BP,MAAAA,UAAU,EAAEzC,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CADe;AAE3BR,MAAAA,YAAY,EAAE1C,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CAFa;AAG3BP,MAAAA,WAAW,EAAE3C,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAHc;AAI3BN,MAAAA,KAAK,EAAE5C,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,cAAtB,CAJoB;AAK3BL,MAAAA,cAAc,EAAE7C,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,kCAAtB,CALW;AAM3BJ,MAAAA,UAAU,EAAE9C,GAAG,CAACiD,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB;AANe,KAAX,CAZS;AAoB3BC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,UAAIpB,MAAJ,EAAY;AACV,cAAMzB,cAAc,GAAG;AACrB8C,UAAAA,EAAE,EAAEjB,QAAQ,GAAGA,QAAQ,CAACiB,EAAZ,GAAiB,CADR;AAErBZ,UAAAA,UAAU,EAAEW,MAAM,CAACX,UAFE;AAGrBC,UAAAA,YAAY,EAAEU,MAAM,CAACV,YAHA;AAIrBC,UAAAA,WAAW,EAAES,MAAM,CAACT,WAJC;AAKrBC,UAAAA,KAAK,EAAEQ,MAAM,CAACR,KALO;AAMrBC,UAAAA,cAAc,EAAEO,MAAM,CAACP,cANF;AAOrBC,UAAAA,UAAU,EAAEM,MAAM,CAACN;AAPE,SAAvB,CADU,CAWV;;AACAQ,QAAAA,QAAQ,CAAC9C,gBAAgB,CAACD,cAAD,CAAjB,CAAR;AACA+B,QAAAA,UAAU,CAACiB,SAAX;AACD,OAdD,MAcO;AACL,cAAMC,WAAW,GAAG;AAClBH,UAAAA,EAAE,EAAEI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,EAAtB,CAAX,IAAwC,EAD1B;AAElBlB,UAAAA,UAAU,EAAEW,MAAM,CAAC,YAAD,CAFA;AAGlBV,UAAAA,YAAY,EAAEU,MAAM,CAAC,cAAD,CAHF;AAIlBT,UAAAA,WAAW,EAAES,MAAM,CAAC,aAAD,CAJD;AAKlBR,UAAAA,KAAK,EAAEQ,MAAM,CAAC,OAAD,CALK;AAMlBP,UAAAA,cAAc,EAAEO,MAAM,CAAC,gBAAD,CANJ;AAOlBN,UAAAA,UAAU,EAAEM,MAAM,CAAC,YAAD;AAPA,SAApB,CADK,CAWL;;AACAE,QAAAA,QAAQ,CAAChD,gBAAgB,CAACkD,WAAD,CAAjB,CAAR;AACAlB,QAAAA,UAAU,CAACiB,SAAX;AACD;;AACDK,MAAAA,MAAM;AACP;AAnD0B,GAAD,CAA5B,CATyB,CA+DzB;;AAEA,QAAMN,QAAQ,GAAGrC,WAAW,EAA5B;AACA,QAAM;AAAE4C,IAAAA;AAAF,MAAgB7C,WAAW,CAAE8C,KAAD,KAAY;AAC5CD,IAAAA,SAAS,EAAEC,KAAK,CAACC,SAAN,CAAgBF;AADiB,GAAZ,CAAD,CAAjC;AAGApE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoE,SAAS,IAAI,CAACA,SAAS,CAACG,MAA5B,EAAoC;AAClCV,MAAAA,QAAQ,CAAClD,cAAc,EAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACkD,QAAD,EAAWO,SAAX,CAJM,CAAT;AAMApE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoE,SAAS,IAAI,CAACA,SAAS,CAACG,MAA5B,EAAoC;AAClCV,MAAAA,QAAQ,CAAClD,cAAc,EAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACkD,QAAD,EAAWO,SAAX,CAJM,CAAT;AAMApE,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,eAAe,CAAC0B,SAAD,CAAf;AACD,GAFQ,EAEN,CAACzB,QAAD,CAFM,CAAT;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,OAAO,CAAC+D,SAAD,CAAR,IAAuB,CAAC,CAAC7B,MAA7B,EAAqC;AACnCG,MAAAA,eAAe,CAAC0B,SAAD,CAAf;AACA5B,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GALQ,EAKN,CAAC4B,SAAD,CALM,CAAT;;AAOA,QAAMD,MAAM,GAAG,MAAM;AACnB,QAAI9B,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAM,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAPD;;AASA,QAAMkC,mBAAmB,GAAIC,GAAD,IAAS;AACnC,UAAM9B,QAAQ,GAAG8B,GAAjB;AACA7B,IAAAA,WAAW,CAAC;AACVgB,MAAAA,EAAE,EAAEjB,QAAQ,CAACiB,EADH;AAEVZ,MAAAA,UAAU,EAAEL,QAAQ,CAACK,UAFX;AAGVC,MAAAA,YAAY,EAAEN,QAAQ,CAACM,YAHb;AAIVC,MAAAA,WAAW,EAAEP,QAAQ,CAACO,WAJZ;AAKVC,MAAAA,KAAK,EAAER,QAAQ,CAACQ,KALN;AAMVC,MAAAA,cAAc,EAAET,QAAQ,CAACS,cANf;AAOVC,MAAAA,UAAU,EAAEV,QAAQ,CAACU;AAPX,KAAD,CAAX;AAUAb,IAAAA,SAAS,CAAC,IAAD,CAAT;AAEA2B,IAAAA,MAAM;AACP,GAfD,CArGyB,CAsHzB;;;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCzE,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAM0E,aAAa,GAAIjC,QAAD,IAAc;AAClCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAgC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKA,QAAME,oBAAoB,GAAG,MAAM;AACjC,QAAIlC,QAAQ,CAACiB,EAAb,EAAiB;AACfC,MAAAA,QAAQ,CAAC5C,gBAAgB,CAAC0B,QAAD,CAAjB,CAAR;AACAgC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GALD;;AAMA,QAAMG,oBAAoB,GAAG,MAAM;AACjCpC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA2B,IAAAA,MAAM;AACP,GAJD;;AAOA,QAAMY,OAAO,GAAG9E,OAAO,CACrB,MAAM,CACJ;AACE+E,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEC,IAAAA,UAAU,EAAE,KAJd;AAKEC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPH,GADI,EAUJ;AACEL,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE,YAFZ;AAGEK,IAAAA,mBAAmB,EAAE,IAHvB;AAIEH,IAAAA,UAAU,EAAE,IAJd;AAKEC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO,QAAC,UAAD,OAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPH,GAVI,EAmBJ;AACEL,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE,cAFZ;AAGEE,IAAAA,UAAU,EAAE,IAHd;AAIEC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO,QAAC,YAAD,OAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AANH,GAnBI,EA2BJ;AACEL,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE,OAFZ;AAGEE,IAAAA,UAAU,EAAE,IAHd;AAIEC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO,QAAC,KAAD,OAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AANH,GA3BI,EAmCJ;AACEL,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,gBAFZ;AAGEE,IAAAA,UAAU,EAAE,IAHd;AAIEC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO,QAAC,cAAD,OAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AANH,GAnCI,EA2CJ;AACEL,IAAAA,MAAM,EAAE,WADV;AAEEC,IAAAA,QAAQ,EAAE,aAFZ;AAGEE,IAAAA,UAAU,EAAE,IAHd;AAIE;AACAC,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BAAO,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPH,GA3CI,EAqDJ;AACEL,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEE,IAAAA,IAAI,EAAGC,SAAD,IAAe;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAME,YAAY,GAAGF,SAAS,CAACG,GAAV,CAAcC,QAAnC;AACAjB,YAAAA,mBAAmB,CAACe,YAAD,CAAnB;AACD,WANH;AAAA,kCAQE;AAAG,YAAA,SAAS,EAAC,0BAAb;AAAwC,YAAA,EAAE,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,mBAAD;AAAqB,YAAA,SAAS,EAAC,KAA/B;AAAqC,YAAA,MAAM,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMA,YAAY,GAAGF,SAAS,CAACG,GAAV,CAAcC,QAAnC;AACAb,YAAAA,aAAa,CAACW,YAAD,CAAb;AACD,WANH;AAAA,kCAQE;AACE,YAAA,SAAS,EAAC,gCADZ;AAEE,YAAA,EAAE,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,kBARF,eAYE,QAAC,mBAAD;AAAqB,YAAA,SAAS,EAAC,KAA/B;AAAqC,YAAA,MAAM,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiCD;AAtCH,GArDI,CADe,EA+FrB,EA/FqB,CAAvB;AAkGA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEb,WADR;AAEE,MAAA,aAAa,EAAEG,oBAFjB;AAGE,MAAA,YAAY,EAAE,MAAMF,cAAc,CAAC,KAAD;AAHpC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,WAAnB;AAA+B,UAAA,cAAc,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA,mCACE,QAAC,cAAD;AACE,cAAA,OAAO,EAAEI,OADX;AAEE,cAAA,IAAI,EAAEX,SAFR;AAGE,cAAA,cAAc,EAAE,IAHlB;AAIE,cAAA,aAAa,EAAE,IAJjB;AAKE,cAAA,qBAAqB,EAAE,IALzB;AAME,cAAA,oBAAoB,EAAEU;AANxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEzC,KAAf;AAAsB,UAAA,MAAM,EAAE8B,MAA9B;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEA,MAArB;AAA6B,YAAA,GAAG,EAAC,IAAjC;AAAA,sBACG,CAAC,CAAC5B,MAAF,GAAW,eAAX,GAA6B;AADhC;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,SAAD;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,QAAQ,EAAGmD,CAAD,IAAO;AACfA,gBAAAA,CAAC,CAACC,cAAF;AACA9C,gBAAAA,UAAU,CAAC+C,YAAX;AACA,uBAAO,KAAP;AACD,eALH;AAAA,sCAOE,QAAC,GAAD;AAAK,gBAAA,IAAI,MAAT;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,QAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,YADP;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,QAAQ,EAAE/C,UAAU,CAACgD,YAHvB;AAIE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UAJrB;AAKE,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBX,UAAlB,IAAgC,EALzC;AAME,sBAAA,OAAO,EACLH,UAAU,CAACkD,OAAX,CAAmB/C,UAAnB,IACAH,UAAU,CAACmD,MAAX,CAAkBhD,UADlB,GAEI,IAFJ,GAGI;AAVR;AAAA;AAAA;AAAA;AAAA,4BAFF,EAeGH,UAAU,CAACkD,OAAX,CAAmB/C,UAAnB,IACDH,UAAU,CAACmD,MAAX,CAAkBhD,UADjB,gBAEC,QAAC,YAAD;AAAc,sBAAA,IAAI,EAAC,SAAnB;AAAA,gCACGH,UAAU,CAACmD,MAAX,CAAkBhD;AADrB;AAAA;AAAA;AAAA;AAAA,4BAFD,GAKG,IApBN;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAuBE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,cADP;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,QAAQ,EAAE;AACRS,wBAAAA,QAAQ,EAAE;AAAEwC,0BAAAA,KAAK,EAAE;AAAT;AADF,uBAHZ;AAME,sBAAA,QAAQ,EAAEpD,UAAU,CAACgD,YANvB;AAOE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UAPrB;AAQE,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBV,YAAlB,IAAkC,EAR3C;AASE,sBAAA,OAAO,EACLJ,UAAU,CAACkD,OAAX,CAAmB9C,YAAnB,IACAJ,UAAU,CAACmD,MAAX,CAAkB/C,YADlB,GAEI,IAFJ,GAGI;AAbR;AAAA;AAAA;AAAA;AAAA,4BAFF,EAkBGJ,UAAU,CAACkD,OAAX,CAAmB9C,YAAnB,IACDJ,UAAU,CAACmD,MAAX,CAAkB/C,YADjB,gBAEC,QAAC,YAAD;AAAc,sBAAA,IAAI,EAAC,SAAnB;AAAA,gCACGJ,UAAU,CAACmD,MAAX,CAAkB/C;AADrB;AAAA;AAAA;AAAA;AAAA,4BAFD,GAKG,IAvBN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvBF,eAgDE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,QAAQ,EAAEJ,UAAU,CAACgD,YAHvB;AAIE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UAJrB;AAKE,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBR,KAAlB,IAA2B,EALpC;AAME,sBAAA,OAAO,EACLN,UAAU,CAACkD,OAAX,CAAmB5C,KAAnB,IAA4BN,UAAU,CAACmD,MAAX,CAAkB7C,KAA9C,GACI,IADJ,GAEI;AATR;AAAA;AAAA;AAAA;AAAA,4BAFF,EAcGN,UAAU,CAACkD,OAAX,CAAmB5C,KAAnB,IAA4BN,UAAU,CAACmD,MAAX,CAAkB7C,KAA9C,gBACC,QAAC,YAAD;AAAc,sBAAA,IAAI,EAAC,SAAnB;AAAA,gCACGN,UAAU,CAACmD,MAAX,CAAkB7C;AADrB;AAAA;AAAA;AAAA;AAAA,4BADD,GAIG,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhDF,eAoEE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,gBADP;AAEE,sBAAA,IAAI,EAAC,QAFP;AAGE,sBAAA,SAAS,EAAC,aAHZ;AAIE,sBAAA,QAAQ,EAAEN,UAAU,CAACgD,YAJvB;AAKE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UALrB;AAME,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBP,cAAlB,IAAoC,EAN7C;AAAA,8CAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAaGP,UAAU,CAACkD,OAAX,CAAmB3C,cAAnB,IACDP,UAAU,CAACmD,MAAX,CAAkB5C,cADjB,gBAEC,QAAC,YAAD;AAAc,sBAAA,IAAI,EAAC,SAAnB;AAAA,gCACGP,UAAU,CAACmD,MAAX,CAAkB5C;AADrB;AAAA;AAAA;AAAA;AAAA,4BAFD,GAKG,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,0BApEF,eAwFE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,aADP;AAEE,sBAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,sBAAA,QAAQ,EAAEP,UAAU,CAACgD,YAJvB;AAKE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UALrB;AAME,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBT,WAAlB,IAAiC,EAN1C;AAOE,sBAAA,OAAO,EACLL,UAAU,CAACkD,OAAX,CAAmB7C,WAAnB,IACAL,UAAU,CAACmD,MAAX,CAAkB9C,WADlB,GAEI,IAFJ,GAGI;AAXR;AAAA;AAAA;AAAA;AAAA,4BAFF,EAgBGL,UAAU,CAACkD,OAAX,CAAmB7C,WAAnB,IACDL,UAAU,CAACmD,MAAX,CAAkB9C,WADjB,gBAEC,QAAC,YAAD;AAAc,sBAAA,IAAI,EAAC,SAAnB;AAAA,gCACGL,UAAU,CAACmD,MAAX,CAAkB9C;AADrB;AAAA;AAAA;AAAA;AAAA,4BAFD,GAKG,IArBN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxFF,eA+GE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE,QAAC,KAAD;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,KAAD;AACE,sBAAA,IAAI,EAAC,YADP;AAEE,sBAAA,IAAI,EAAC,QAFP;AAGE,sBAAA,SAAS,EAAC,aAHZ;AAIE,sBAAA,QAAQ,EAAEL,UAAU,CAACgD,YAJvB;AAKE,sBAAA,MAAM,EAAEhD,UAAU,CAACiD,UALrB;AAME,sBAAA,KAAK,EAAEjD,UAAU,CAACc,MAAX,CAAkBN,UAAlB,IAAgC,EANzC;AAAA,8CAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF,eAuIE,QAAC,GAAD;AAAA,uCACE,QAAC,GAAD;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACE;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAvIF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqLD;;GAlaQjB,e;UASY5B,S,EAwDFgB,W,EACKD,W;;;KAlEfa,e;AAmaTA,eAAe,CAAC8D,SAAhB,GAA4B;AAC1BC,EAAAA,qBAAqB,EAAEhG,SAAS,CAACiG;AADP,CAA5B;AAIA,eAAehE,eAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableContainer from \"../../../components/Common/TableContainer\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n//import components\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\n\nimport {\n  getCustomers as onGetCustomers,\n  addNewCustomer as onAddNewCustomer,\n  updateCustomer as onUpdateCustomer,\n  deleteCustomer as onDeleteCustomer,\n} from \"../../../store/actions\";\n\nimport {\n  CustomerId,\n  CustomerName,\n  Date,\n  Email,\n  CustomerStatus,\n} from \"./EcommerceCustomerCol\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Col,\n  Row,\n  UncontrolledTooltip,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  Input,\n  FormFeedback,\n  Label,\n} from \"reactstrap\";\nimport DeleteModal from \"../../../components/Common/DeleteModal\";\n\nfunction DatatableTables() {\n  const [modal, setModal] = useState(false);\n  // const [modal1, setModal1] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const [customerList, setCustomerList] = useState([]);\n  const [customer, setCustomer] = useState([]);\n\n  // validation\n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      customerid: (customer && customer.customerid) || \"\",\n      customerName: (customer && customer.customerName) || \"\",\n      joiningDate: (customer && customer.joiningDate) || \"\",\n      email: (customer && customer.email) || \"\",\n      customerStatus: (customer && customer.customerStatus) || \"Active\",\n      badgeclass: (customer && customer.badgeclass) || \"success\",\n    },\n    validationSchema: Yup.object({\n      customerid: Yup.string().required(\"Please Enter Your Order Id\"),\n      customerName: Yup.string().required(\"Please Enter Your Billing Name\"),\n      joiningDate: Yup.string().required(\"Please Enter Your Order Date\"),\n      email: Yup.string().required(\"Total Amount\"),\n      customerStatus: Yup.string().required(\"Please Enter Your Payment Status\"),\n      badgeclass: Yup.string().required(\"Please Enter Your Badge Class\"),\n    }),\n    onSubmit: (values) => {\n      if (isEdit) {\n        const updateCustomer = {\n          id: customer ? customer.id : 0,\n          customerid: values.customerid,\n          customerName: values.customerName,\n          joiningDate: values.joiningDate,\n          email: values.email,\n          customerStatus: values.customerStatus,\n          badgeclass: values.badgeclass,\n        };\n     \n        // update customer\n        dispatch(onUpdateCustomer(updateCustomer));\n        validation.resetForm();\n      } else {\n        const newCustomer = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          customerid: values[\"customerid\"],\n          customerName: values[\"customerName\"],\n          joiningDate: values[\"joiningDate\"],\n          email: values[\"email\"],\n          customerStatus: values[\"customerStatus\"],\n          badgeclass: values[\"badgeclass\"],\n        };\n       \n        // save new customer\n        dispatch(onAddNewCustomer(newCustomer));\n        validation.resetForm();\n      }\n      toggle();\n    },\n  });\n\n  // const toggleViewModal = () => setModal1(!modal1);\n\n  const dispatch = useDispatch();\n  const { customers } = useSelector((state) => ({\n    customers: state.ecommerce.customers,\n  }));\n  useEffect(() => {\n    if (customers && !customers.length) {\n      dispatch(onGetCustomers());\n    }\n  }, [dispatch, customers]);\n\n  useEffect(() => {\n    if (customers && !customers.length) {\n      dispatch(onGetCustomers());\n    }\n  }, [dispatch, customers]);\n\n  useEffect(() => {\n    setCustomerList(customers);\n  }, [customer]);\n\n  useEffect(() => {\n    if (!isEmpty(customers) && !!isEdit) {\n      setCustomerList(customers);\n      setIsEdit(false);\n    }\n  }, [customers]);\n\n  const toggle = () => {\n    if (modal) {\n      setModal(false);\n      setCustomer(null);\n    } else {\n      setModal(true);\n    }\n  };\n\n  const handleCustomerClick = (arg) => {\n    const customer = arg;\n    setCustomer({\n      id: customer.id,\n      customerid: customer.customerid,\n      customerName: customer.customerName,\n      joiningDate: customer.joiningDate,\n      email: customer.email,\n      customerStatus: customer.customerStatus,\n      badgeclass: customer.badgeclass,\n    });\n\n    setIsEdit(true);\n\n    toggle();\n  };\n\n  //delete customer\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onClickDelete = (customer) => {\n    setCustomer(customer);\n    setDeleteModal(true);\n  };\n\n  const handleDeleteCustomer = () => {\n    if (customer.id) {\n      dispatch(onDeleteCustomer(customer));\n      setDeleteModal(false);\n    }\n  };\n  const handleCustomerClicks = () => {\n    setCustomerList(\"\");\n    setIsEdit(false);\n    toggle();\n  };\n\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Id\",\n        accessor: \"checkbox\",\n        disableFilters: true,\n        filterable: false,\n        Cell: (cellProps) => {\n          return <input type=\"checkbox\" className=\"selection-input-4\" />;\n        },\n      },\n      {\n        Header: \"Customer ID\",\n        accessor: \"customerid\",\n        disableGlobalFilter: true,\n        filterable: true,\n        Cell: (cellProps) => {\n          return <CustomerId {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Customer\",\n        accessor: \"customerName\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <CustomerName {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <Email {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Status\",\n        accessor: \"customerStatus\",\n        filterable: true,\n        Cell: (cellProps) => {\n          return <CustomerStatus {...cellProps} />;\n        },\n      },\n      {\n        Header: \"Join Date\",\n        accessor: \"joiningDate\",\n        filterable: true,\n        // formatter: (cellContent, row) => handleValidDate(row.joiningDate),\n        Cell: (cellProps) => {\n          return <Date {...cellProps} />;\n        },\n      },\n\n      {\n        Header: \"Action\",\n        accessor: \"action\",\n        disableFilters: true,\n        Cell: (cellProps) => {\n          return (\n            <div className=\"d-flex gap-3\">\n              <Link\n                to=\"#\"\n                className=\"text-primary\"\n                onClick={() => {\n                  const customerData = cellProps.row.original;\n                  handleCustomerClick(customerData);\n                }}\n              >\n                <i className=\"uil uil-pen font-size-18\" id=\"edittooltip\" />\n                <UncontrolledTooltip placement=\"top\" target=\"edittooltip\">\n                  Edit\n                </UncontrolledTooltip>\n              </Link>\n              <Link\n                to=\"#\"\n                className=\"text-danger\"\n                onClick={() => {\n                  const customerData = cellProps.row.original;\n                  onClickDelete(customerData);\n                }}\n              >\n                <i\n                  className=\"uil uil-trash-alt font-size-18\"\n                  id=\"deletetooltip\"\n                />\n                <UncontrolledTooltip placement=\"top\" target=\"deletetooltip\">\n                  Delete\n                </UncontrolledTooltip>\n              </Link>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <React.Fragment>\n      <DeleteModal\n        show={deleteModal}\n        onDeleteClick={handleDeleteCustomer}\n        onCloseClick={() => setDeleteModal(false)}\n      />\n      <div className=\"page-content\">\n        <div className=\"container-fluid\">\n          <Breadcrumbs title=\"Ecommerce\" breadcrumbItem=\"Customers\" />\n          <Row>\n            <Col xs=\"12\">\n              <TableContainer\n                columns={columns}\n                data={customers}\n                isGlobalFilter={true}\n                isAddCustomer={true}\n                isAddTableBorderStrap={true}\n                handleCustomerClicks={handleCustomerClicks}\n              />\n            </Col>\n          </Row>\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle} tag=\"h4\">\n              {!!isEdit ? \"Edit Customer\" : \"Add Customer\"}\n            </ModalHeader>\n            <ModalBody>\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  validation.handleSubmit();\n                  return false;\n                }}\n              >\n                <Row form>\n                  <Col className=\"col-12\">\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Customer Id</Label>\n                      <Input\n                        name=\"customerid\"\n                        type=\"text\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.customerid || \"\"}\n                        invalid={\n                          validation.touched.customerid &&\n                          validation.errors.customerid\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.customerid &&\n                      validation.errors.customerid ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.customerid}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Customer Name</Label>\n                      <Input\n                        name=\"customerName\"\n                        type=\"text\"\n                        validate={{\n                          required: { value: true },\n                        }}\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.customerName || \"\"}\n                        invalid={\n                          validation.touched.customerName &&\n                          validation.errors.customerName\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.customerName &&\n                      validation.errors.customerName ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.customerName}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Email</Label>\n                      <Input\n                        name=\"email\"\n                        type=\"text\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.email || \"\"}\n                        invalid={\n                          validation.touched.email && validation.errors.email\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.email && validation.errors.email ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.email}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Customer Status</Label>\n                      <Input\n                        name=\"customerStatus\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.customerStatus || \"\"}\n                      >\n                        <option>Active</option>\n                        <option>Deactive</option>\n                      </Input>\n                      {validation.touched.customerStatus &&\n                      validation.errors.customerStatus ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.customerStatus}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Joining Date</Label>\n                      <Input\n                        name=\"joiningDate\"\n                        type=\"date\"\n                        // value={customerList.joiningDate || \"\"}\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.joiningDate || \"\"}\n                        invalid={\n                          validation.touched.joiningDate &&\n                          validation.errors.joiningDate\n                            ? true\n                            : false\n                        }\n                      />\n                      {validation.touched.joiningDate &&\n                      validation.errors.joiningDate ? (\n                        <FormFeedback type=\"invalid\">\n                          {validation.errors.joiningDate}\n                        </FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Badge Class</Label>\n                      <Input\n                        name=\"badgeclass\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        onChange={validation.handleChange}\n                        onBlur={validation.handleBlur}\n                        value={validation.values.badgeclass || \"\"}\n                      >\n                        <option>success</option>\n                        <option>danger</option>\n                      </Input>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <div className=\"text-end\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success save-user\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nDatatableTables.propTypes = {\n  preGlobalFilteredRows: PropTypes.any,\n};\n\nexport default DatatableTables;\n"]},"metadata":{},"sourceType":"module"}