{"ast":null,"code":"var _jsxFileName = \"/home/happy/Downloads/main-main/src/components/Common/TableContainer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, useFilters, useExpanded, usePagination, useRowSelect } from \"react-table\";\nimport { Table, Row, Col, Button, Input } from \"reactstrap\";\nimport { Filter, DefaultColumnFilter } from \"./filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableContainer = _ref => {\n  _s();\n\n  let {\n    columns,\n    data,\n    isGlobalFilter,\n    isAddOrder,\n    isAddTableWithoutBorderStrap,\n    handleOrderClicks,\n    isAddCustomer,\n    isAddUsers,\n    handleUserClicks,\n    handleCustomerClicks,\n    isAddTableBorderStrap,\n    isAddInvoice,\n    handleInvoiceClicks\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    defaultColumn: {\n      Filter: DefaultColumnFilter\n    },\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    }\n  }, useGlobalFilter, useFilters, useSortBy, useExpanded, usePagination, useRowSelect);\n\n  const generateSortingIndicator = column => {\n    return column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\";\n  };\n\n  const onChangeInSelect = event => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const onChangeInInput = event => {\n    const page = event.target.value ? Number(event.target.value) - 1 : 0;\n    gotoPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [isGlobalFilter && /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: state.globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), isAddUsers && /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"waves-effect waves-light mb-3 btn btn-success\",\n            onClick: handleUserClicks,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), \"Add New\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), isAddInvoice && /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"waves-effect waves-light mb-3 btn btn-success\",\n            onClick: handleInvoiceClicks,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), \"Add Invoice\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), isAddCustomer && /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"waves-effect waves-light mb-3 btn btn-success\",\n            onClick: handleCustomerClicks,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \"Add New Customer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), isAddOrder && /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"waves-effect waves-light mb-3 btn btn-success\",\n            onClick: handleOrderClicks,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), \"Add New Order\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 1,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          value: pageSize,\n          onChange: onChangeInSelect,\n          children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isAddTableWithoutBorderStrap && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        ...getTableProps(),\n        className: \"react_table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-nowrap\",\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                ...column.getSortByToggleProps(),\n                children: [column.render(\"Header\"), generateSortingIndicator(column)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Filter, {\n                column: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)]\n            }, column.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this))\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render(\"Cell\")\n                  }, cell.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)\n            }, row.getRowProps().key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), isAddTableBorderStrap && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table-centered datatable dt-responsive nowrap table-card-list react_table\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-nowrap\",\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                ...column.getSortByToggleProps(),\n                children: [column.render(\"Header\"), generateSortingIndicator(column)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Filter, {\n                column: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this)]\n            }, column.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this))\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render(\"Cell\")\n                  }, cell.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, row.getRowProps().key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-end justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => gotoPage(0),\n            disabled: !canPreviousPage,\n            children: \"<<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: previousPage,\n            disabled: !canPreviousPage,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-auto d-none d-md-block\",\n        children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-auto\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          min: 1,\n          style: {\n            width: 70\n          },\n          max: pageOptions.length,\n          defaultValue: pageIndex + 1,\n          onChange: onChangeInInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: nextPage,\n            disabled: !canNextPage,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => gotoPage(pageCount - 1),\n            disabled: !canNextPage,\n            children: \">>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}; // Define a default UI for filtering\n\n\n_s(TableContainer, \"QMAKBZfn+YvtuSBZrGf0QJm4lQw=\", false, function () {\n  return [useTable];\n});\n\n_c = TableContainer;\n\nfunction GlobalFilter(_ref2) {\n  _s2();\n\n  let {\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter\n  } = _ref2;\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box me-2 mb-2 d-inline-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-bar-0\",\n            className: \"search-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"search-bar-0-label\",\n              className: \"sr-only\",\n              children: \"Search this table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setValue(e.target.value);\n                onChange(e.target.value);\n              },\n              id: \"search-bar-0\",\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: `${count} records...`,\n              value: value || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bx-search-alt search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c2 = GlobalFilter;\nTableContainer.propTypes = {\n  preGlobalFilteredRows: PropTypes.any\n};\nexport default TableContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableContainer\");\n$RefreshReg$(_c2, \"GlobalFilter\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/components/Common/TableContainer.js"],"names":["React","Fragment","PropTypes","useTable","useGlobalFilter","useAsyncDebounce","useSortBy","useFilters","useExpanded","usePagination","useRowSelect","Table","Row","Col","Button","Input","Filter","DefaultColumnFilter","TableContainer","columns","data","isGlobalFilter","isAddOrder","isAddTableWithoutBorderStrap","handleOrderClicks","isAddCustomer","isAddUsers","handleUserClicks","handleCustomerClicks","isAddTableBorderStrap","isAddInvoice","handleInvoiceClicks","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","preGlobalFilteredRows","setGlobalFilter","pageIndex","pageSize","defaultColumn","initialState","generateSortingIndicator","column","isSorted","isSortedDesc","onChangeInSelect","event","Number","target","value","onChangeInInput","globalFilter","map","headerGroup","getHeaderGroupProps","headers","getSortByToggleProps","render","id","row","cells","cell","getCellProps","getRowProps","key","length","width","GlobalFilter","count","setValue","useState","onChange","undefined","e","propTypes","any"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useTable,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination,\n  useRowSelect,\n} from \"react-table\";\nimport { Table, Row, Col, Button, Input } from \"reactstrap\";\nimport { Filter, DefaultColumnFilter } from \"./filters\";\n\nconst TableContainer = ({\n  columns,\n  data,\n  isGlobalFilter,\n  isAddOrder,\n  isAddTableWithoutBorderStrap,\n  handleOrderClicks,\n  isAddCustomer,\n  isAddUsers,\n  handleUserClicks,\n  handleCustomerClicks,\n  isAddTableBorderStrap,\n  isAddInvoice,\n  handleInvoiceClicks,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: { Filter: DefaultColumnFilter },\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useRowSelect\n  );\n\n  const generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\") : \"\";\n  };\n\n  const onChangeInSelect = (event) => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const onChangeInInput = (event) => {\n    const page = event.target.value ? Number(event.target.value) - 1 : 0;\n    gotoPage(page);\n  };\n\n  return (\n    <Fragment>\n      <Row className=\"mb-3\">\n      {isGlobalFilter && (\n          <GlobalFilter\n            preGlobalFilteredRows={preGlobalFilteredRows}\n            globalFilter={state.globalFilter}\n            setGlobalFilter={setGlobalFilter}\n          />\n        )}\n        {isAddUsers && (\n          <Col sm=\"7\">\n            <div className=\"text-sm-end\">\n              <Button\n                type=\"button\"\n                color=\"success\"\n                className=\"waves-effect waves-light mb-3 btn btn-success\"\n                onClick={handleUserClicks}\n              >\n                <i className=\"mdi mdi-plus me-1\" />\n                Add New\n              </Button>\n            </div>\n          </Col>\n        )}\n        {isAddInvoice && (\n          <Col sm=\"7\">\n            <div className=\"text-sm-end\">\n              <Button\n                type=\"button\"\n                color=\"success\"\n                className=\"waves-effect waves-light mb-3 btn btn-success\"\n                onClick={handleInvoiceClicks}\n              >\n                <i className=\"mdi mdi-plus me-1\" />\n                Add Invoice\n              </Button>\n            </div>\n          </Col>\n        )}\n        {isAddCustomer && (\n          <Col sm=\"7\">\n            <div className=\"text-sm-end\">\n              <Button\n                type=\"button\"\n                color=\"success\"\n                className=\"waves-effect waves-light mb-3 btn btn-success\"\n                onClick={handleCustomerClicks}\n              >\n                <i className=\"mdi mdi-plus me-1\" />\n                Add New Customer\n              </Button>\n            </div>\n          </Col>\n        )}\n        {isAddOrder && (\n          <Col sm=\"7\">\n            <div className=\"text-sm-end\">\n              <Button\n                type=\"button\"\n                color=\"success\"\n                className=\"waves-effect waves-light mb-3 btn btn-success\"\n                onClick={handleOrderClicks}\n              >\n                <i className=\"mdi mdi-plus me-1\" />\n                Add New Order\n              </Button>\n            </div>\n          </Col>\n        )}\n\n        <Col md={1}>\n          <select\n            className=\"form-select\"\n            value={pageSize}\n            onChange={onChangeInSelect}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </Col>\n      </Row>\n\n      {isAddTableWithoutBorderStrap && (\n        <div className=\"table-responsive\">\n          <Table bordered hover {...getTableProps()} className=\"react_table\">\n            <thead className=\"table-nowrap\">\n              {headerGroups.map((headerGroup) => (\n                <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <th key={column.id}>\n                      <div className=\"mb-2\" {...column.getSortByToggleProps()}>\n                        {column.render(\"Header\")}\n                        {generateSortingIndicator(column)}\n                      </div>\n                      <Filter column={column} />\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n\n            <tbody {...getTableBodyProps()}>\n              {page.map((row) => {\n                prepareRow(row);\n                return (\n                  <Fragment key={row.getRowProps().key}>\n                    <tr>\n                      {row.cells.map((cell) => {\n                        return (\n                          <td key={cell.id} {...cell.getCellProps()}>\n                            {cell.render(\"Cell\")}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  </Fragment>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      )}\n\n      {isAddTableBorderStrap && (\n        <div className=\"table-responsive\">\n          <Table\n            className=\"table-centered datatable dt-responsive nowrap table-card-list react_table\"\n            {...getTableProps()}\n          >\n            <thead className=\"table-nowrap\">\n              {headerGroups.map((headerGroup) => (\n                <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <th key={column.id}>\n                      <div className=\"mb-2\" {...column.getSortByToggleProps()}>\n                        {column.render(\"Header\")}\n                        {generateSortingIndicator(column)}\n                      </div>\n                      <Filter column={column} />\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n\n            <tbody {...getTableBodyProps()}>\n              {page.map((row) => {\n                prepareRow(row);\n                return (\n                  <Fragment key={row.getRowProps().key}>\n                    <tr>\n                      {row.cells.map((cell) => {\n                        return (\n                          <td key={cell.id} {...cell.getCellProps()}>\n                            {cell.render(\"Cell\")}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  </Fragment>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      )}\n\n      <Row className=\"justify-content-md-end justify-content-center align-items-center\">\n        <Col className=\"col-md-auto\">\n          <div className=\"d-flex gap-1\">\n            <Button\n              color=\"primary\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {\"<<\"}\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={previousPage}\n              disabled={!canPreviousPage}\n            >\n              {\"<\"}\n            </Button>\n          </div>\n        </Col>\n        <Col className=\"col-md-auto d-none d-md-block\">\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>\n        </Col>\n        <Col className=\"col-md-auto\">\n          <Input\n            type=\"number\"\n            min={1}\n            style={{ width: 70 }}\n            max={pageOptions.length}\n            defaultValue={pageIndex + 1}\n            onChange={onChangeInInput}\n          />\n        </Col>\n\n        <Col className=\"col-md-auto\">\n          <div className=\"d-flex gap-1\">\n            <Button color=\"primary\" onClick={nextPage} disabled={!canNextPage}>\n              {\">\"}\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {\">>\"}\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <React.Fragment>\n      <Col sm={4}>\n        <div className=\"search-box me-2 mb-2 d-inline-block\">\n          <div className=\"position-relative\">\n            <label htmlFor=\"search-bar-0\" className=\"search-label\">\n              <span id=\"search-bar-0-label\" className=\"sr-only\">\n                Search this table\n              </span>\n              <input\n                onChange={(e) => {\n                  setValue(e.target.value);\n                  onChange(e.target.value);\n                }}\n                id=\"search-bar-0\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder={`${count} records...`}\n                value={value || \"\"}\n              />\n            </label>\n            <i className=\"bx bx-search-alt search-icon\"></i>\n          </div>\n        </div>\n      </Col>\n    </React.Fragment>\n  );\n}\n\nTableContainer.propTypes = {\n  preGlobalFilteredRows: PropTypes.any,\n};\n\nexport default TableContainer;\n"]},"metadata":{},"sourceType":"module"}