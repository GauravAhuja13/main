{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_USERS, GET_USER_PROFILE, ADD_NEW_USER, UPDATE_USER, DELETE_USER } from \"./actionTypes\";\nimport { getUsersSuccess, getUsersFail, addUserSuccess, addUserFail, updateUserSuccess, updateUserFail, deleteUserSuccess, deleteUserFail, getUserProfileSuccess, getUserProfileFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getUsers, getUserProfile, addNewUser, updateUser, deleteUser } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers);\n    yield put(getUsersSuccess(response));\n  } catch (error) {\n    yield put(getUsersFail(error));\n  }\n}\n\nfunction* onUpdateUser(_ref) {\n  let {\n    payload: user\n  } = _ref;\n\n  try {\n    const response = yield call(updateUser, user);\n    yield put(updateUserSuccess(response));\n  } catch (error) {\n    yield put(updateUserFail(error));\n  }\n}\n\nfunction* onDeleteUser(_ref2) {\n  let {\n    payload: user\n  } = _ref2;\n\n  try {\n    const response = yield call(deleteUser, user);\n    yield put(deleteUserSuccess(response));\n  } catch (error) {\n    yield put(deleteUserFail(error));\n  }\n}\n\nfunction* onAddNewUser(_ref3) {\n  let {\n    payload: user\n  } = _ref3;\n\n  try {\n    const response = yield call(addNewUser, user);\n    yield put(addUserSuccess(response));\n  } catch (error) {\n    yield put(addUserFail(error));\n  }\n}\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile);\n    yield put(getUserProfileSuccess(response));\n  } catch (error) {\n    yield put(getUserProfileFail(error));\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers);\n  yield takeEvery(ADD_NEW_USER, onAddNewUser);\n  yield takeEvery(UPDATE_USER, onUpdateUser);\n  yield takeEvery(DELETE_USER, onDeleteUser);\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile);\n}\n\nexport default contactsSaga;","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/store/contacts/saga.js"],"names":["call","put","takeEvery","GET_USERS","GET_USER_PROFILE","ADD_NEW_USER","UPDATE_USER","DELETE_USER","getUsersSuccess","getUsersFail","addUserSuccess","addUserFail","updateUserSuccess","updateUserFail","deleteUserSuccess","deleteUserFail","getUserProfileSuccess","getUserProfileFail","getUsers","getUserProfile","addNewUser","updateUser","deleteUser","fetchUsers","response","error","onUpdateUser","payload","user","onDeleteUser","onAddNewUser","fetchUserProfile","contactsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SACEC,SADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,WALF,QAMQ,eANR;AAOA,SACEC,eADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,iBALF,EAMEC,cANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,qBATF,EAUEC,kBAVF,QAWO,WAXP,C,CAaA;;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,kCANP;;AAQA,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACkB,QAAD,CAA3B;AACA,UAAMjB,GAAG,CAACO,eAAe,CAACgB,QAAD,CAAhB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACQ,YAAY,CAACgB,KAAD,CAAb,CAAT;AACD;AACF;;AAED,UAAUC,YAAV,OAA0C;AAAA,MAAlB;AAACC,IAAAA,OAAO,EAAEC;AAAV,GAAkB;;AACxC,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACqB,UAAD,EAAaO,IAAb,CAA3B;AACA,UAAM3B,GAAG,CAACW,iBAAiB,CAACY,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACY,cAAc,CAACY,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUI,YAAV,QAAyC;AAAA,MAAjB;AAACF,IAAAA,OAAO,EAAEC;AAAV,GAAiB;;AACvC,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACsB,UAAD,EAAaM,IAAb,CAA3B;AACA,UAAM3B,GAAG,CAACa,iBAAiB,CAACU,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACc,cAAc,CAACU,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUK,YAAV,QAA0C;AAAA,MAAlB;AAAEH,IAAAA,OAAO,EAAEC;AAAX,GAAkB;;AACxC,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMxB,IAAI,CAACoB,UAAD,EAAaQ,IAAb,CAA3B;AACA,UAAM3B,GAAG,CAACS,cAAc,CAACc,QAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,WAAW,CAACc,KAAD,CAAZ,CAAT;AACD;AACF;;AAGD,UAAUM,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAMP,QAAQ,GAAG,MAAMxB,IAAI,CAACmB,cAAD,CAA3B;AACA,UAAMlB,GAAG,CAACe,qBAAqB,CAACQ,QAAD,CAAtB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACgB,kBAAkB,CAACQ,KAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAM9B,SAAS,CAACC,SAAD,EAAYoB,UAAZ,CAAf;AACA,QAAMrB,SAAS,CAACG,YAAD,EAAeyB,YAAf,CAAf;AACA,QAAM5B,SAAS,CAACI,WAAD,EAAcoB,YAAd,CAAf;AACA,QAAMxB,SAAS,CAACK,WAAD,EAAcsB,YAAd,CAAf;AACA,QAAM3B,SAAS,CAACE,gBAAD,EAAmB2B,gBAAnB,CAAf;AACD;;AAED,eAAeC,YAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\n\n// Crypto Redux States\nimport { \n  GET_USERS, \n  GET_USER_PROFILE,\n  ADD_NEW_USER,\n  UPDATE_USER,\n  DELETE_USER\n } from \"./actionTypes\";\nimport {\n  getUsersSuccess,\n  getUsersFail,\n  addUserSuccess,\n  addUserFail,\n  updateUserSuccess,\n  updateUserFail,\n  deleteUserSuccess,\n  deleteUserFail,\n  getUserProfileSuccess,\n  getUserProfileFail,\n} from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { \n  getUsers,\n  getUserProfile,\n  addNewUser,\n  updateUser,\n  deleteUser,\n} from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers);\n    yield put(getUsersSuccess(response));\n  } catch (error) {\n    yield put(getUsersFail(error));\n  }\n}\n\nfunction* onUpdateUser ({payload: user }) {\n  try {\n    const response = yield call(updateUser, user);\n    yield put(updateUserSuccess(response));\n  } catch (error) {\n    yield put(updateUserFail(error));\n  }\n}\n\nfunction* onDeleteUser ({payload: user}) {\n  try {\n    const response = yield call(deleteUser, user);\n    yield put(deleteUserSuccess(response));\n  } catch (error) {\n    yield put(deleteUserFail(error));\n  }\n}\n\nfunction* onAddNewUser ({ payload: user}) {\n  try {\n    const response = yield call(addNewUser, user);\n    yield put(addUserSuccess(response));\n  } catch (error) {\n    yield put(addUserFail(error));\n  }\n}\n\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile);\n    yield put(getUserProfileSuccess(response));\n  } catch (error) {\n    yield put(getUserProfileFail(error));\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers);\n  yield takeEvery(ADD_NEW_USER, onAddNewUser);\n  yield takeEvery(UPDATE_USER, onUpdateUser);\n  yield takeEvery(DELETE_USER, onDeleteUser);\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile);\n}\n\nexport default contactsSaga;\n"]},"metadata":{},"sourceType":"module"}