{"ast":null,"code":"var _jsxFileName = \"/home/happy/Downloads/main-main/src/pages/Forms/FormValidations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form } from \"reactstrap\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidations = props => {\n  _s();\n\n  // Form validation \n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      city: '',\n      state: '',\n      zip: ''\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().required(\"Please Enter Your First Name\"),\n      lastname: Yup.string().required(\"Please Enter Your Last Name\"),\n      city: Yup.string().required(\"Please Enter Your City\"),\n      state: Yup.string().required(\"Please Enter Your State\"),\n      zip: Yup.string().required(\"Please Enter Your Zip\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  }); // Form validation \n\n  const validationType = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      username: '',\n      password: '',\n      password1: '',\n      email: '',\n      digits: '',\n      number: '',\n      alphanumeric: '',\n      textarea: ''\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required(\"This value is required\"),\n      password: Yup.string().required(\"This value is required\"),\n      password1: Yup.string().when(\"password\", {\n        is: val => val && val.length > 0 ? true : false,\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n      }),\n      email: Yup.string().email(\"Must be a valid Email\").max(255).required(\"Email is required\"),\n      url: Yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/, \"Enter correct url!\").required(\"Please enter correct Url\"),\n      digits: Yup.number().required(\"Please Enter Your Digits\"),\n      number: Yup.number().required(\"Please Enter Your Number\"),\n      alphanumeric: Yup.string().matches(/^[a-z0-9]+$/i, \"Enter correct Alphanumeric!\").required(\"Please Enter Your Alphanumeric\"),\n      textarea: Yup.string().required(\"Please Enter Your Textarea\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  }); // const regExp = /\\b\\d{5}\\b/;\n  // Form validation \n\n  const rangeValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      min_Length: '',\n      max_Length: '',\n      min_Value: '',\n      max_Value: '',\n      range_Value: '',\n      regular_Exp: ''\n    },\n    validationSchema: Yup.object().shape({\n      min_Length: Yup.string().min(6, \"Must be exactly 6 digits\").required(\"Min 6 chars\"),\n      max_Length: Yup.string().max(6, \"Must be exactly 6 digits\").required(\"Max 6 chars\"),\n      min_Value: Yup.string().required(\"Min Value 6\").test('val', 'This value should be greater than or equal to 6', val => val >= 6),\n      max_Value: Yup.string().required(\"Max Value 6\").matches(/^[0-6]+$/, \"This value should be lower than or equal to 6.\"),\n      range_Value: Yup.string().required(\"range between 5 to 10\").min(5, \"This value should be between 5 and 10\").max(10, \"This value should be between 5 and 10\"),\n      regular_Exp: Yup.string().matches(/^[#0-9]+$/, \"Only Hex Value\").required(\"Only Hex Value\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  });\n  const [fnm, setfnm] = useState(false);\n  const [lnm, setlnm] = useState(false);\n  const [unm, setunm] = useState(false);\n  const [city, setcity] = useState(false);\n  const [stateV, setstateV] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var fnm = document.getElementById(\"validationTooltip01\").value;\n    var lnm = document.getElementById(\"validationTooltip02\").value;\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\n    var city = document.getElementById(\"validationTooltip03\").value;\n    var stateV = document.getElementById(\"validationTooltip04\").value;\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\");\n\n    if (fnm === \"\") {\n      setfnm(false);\n    } else {\n      setfnm(true);\n    }\n\n    if (lnm === \"\") {\n      setlnm(false);\n    } else {\n      setlnm(true);\n    }\n\n    if (unm === \"\") {\n      setunm(false);\n    } else {\n      setunm(true);\n    }\n\n    if (city === \"\") {\n      setcity(false);\n    } else {\n      setcity(true);\n    }\n\n    if (stateV === \"\") {\n      setstateV(false);\n    } else {\n      setstateV(true);\n    }\n\n    var d1 = document.getElementsByName(\"validate\");\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\";\n    }\n  } //for change tooltip display propery\n\n\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\") {\n      document.getElementById(eleId).style.display = \"none\";\n    } else {\n      document.getElementById(eleId).style.display = \"block\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Form Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"React Validation - Normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"needs-validation\",\n                  onSubmit: e => {\n                    e.preventDefault();\n                    validation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"firstname\",\n                          placeholder: \"First name\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom01\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.firstname || \"\",\n                          invalid: validation.touched.firstname && validation.errors.firstname ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 27\n                        }, this), validation.touched.firstname && validation.errors.firstname ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.firstname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"lastname\",\n                          placeholder: \"Last name\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom02\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.lastname || \"\",\n                          invalid: validation.touched.lastname && validation.errors.lastname ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 27\n                        }, this), validation.touched.lastname && validation.errors.lastname ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.lastname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"city\",\n                          placeholder: \"City\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.city || \"\",\n                          invalid: validation.touched.city && validation.errors.city ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 27\n                        }, this), validation.touched.city && validation.errors.city ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.city\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"state\",\n                          placeholder: \"State\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom04\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.state || \"\",\n                          invalid: validation.touched.state && validation.errors.state ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 27\n                        }, this), validation.touched.state && validation.errors.state ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.state\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom05\",\n                          children: \"Zip\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"zip\",\n                          placeholder: \"Zip Code\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom05\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.zip || \"\",\n                          invalid: validation.touched.zip && validation.errors.zip ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 321,\n                          columnNumber: 27\n                        }, this), validation.touched.zip && validation.errors.zip ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.zip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(Input, {\n                            type: \"checkbox\",\n                            className: \"form-check-input\",\n                            id: \"invalidCheck\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 344,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Label, {\n                            className: \"form-check-label\",\n                            htmlFor: \"invalidCheck\",\n                            children: [\" \", \"Agree to terms and conditions\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 349,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"React Validation (Tooltips)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: [\"If your form layout allows it, you can swap the\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 21\n                  }, this), \" classes for\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"-tooltip\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 21\n                  }, this), \" classes to display validation feedback in a styled tooltip.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"needs-validation\",\n                  method: \"post\",\n                  id: \"tooltipForm\",\n                  onSubmit: e => {\n                    handleSubmit(e);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 389,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip01\",\n                          placeholder: \"First name\",\n                          onChange: event => changeHandeler(event, \"validate1\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 392,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate1\",\n                          children: fnm === true ? \"Looks good!\" : \"Please Enter Valid First Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 402,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip02\",\n                          placeholder: \"Last name\",\n                          onChange: event => changeHandeler(event, \"validate2\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate2\",\n                          children: lnm === true ? \"Looks good!\" : \"Please Enter Valid Last Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 427,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltipUsername\",\n                          children: \"Username\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 442,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"input-group-prepend\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"input-group-text\",\n                              id: \"validationTooltipUsernamePrepend\",\n                              children: \"@\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 447,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 446,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"validationTooltipUsername\",\n                            placeholder: \"Username\",\n                            onChange: event => changeHandeler(event, \"validate3\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 454,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: unm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                            name: \"validate\",\n                            id: \"validate3\",\n                            children: unm === true ? \"Looks good!\" : \"Please choose a unique and valid username.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 445,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 483,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip03\",\n                          placeholder: \"City\",\n                          onChange: event => changeHandeler(event, \"validate4\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: city === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate4\",\n                          children: city === true ? \"Looks good!\" : \"Please choose a unique and valid username.Please provide a valid city.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 482,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 510,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip04\",\n                          placeholder: \"State\",\n                          onChange: event => changeHandeler(event, \"validate5\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 511,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: stateV === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate5\",\n                          children: stateV === true ? \"Looks good!\" : \"Please provide a valid state.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 520,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"Validation type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    validationType.handleSubmit();\n                    return false;\n                  },\n                  className: \"custom-validation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"username\",\n                      placeholder: \"Type Something\",\n                      type: \"text\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.username || \"\",\n                      invalid: validationType.touched.username && validationType.errors.username ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 23\n                    }, this), validationType.touched.username && validationType.errors.username ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Equal To\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"password\",\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.password || \"\",\n                      invalid: validationType.touched.password && validationType.errors.password ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 23\n                    }, this), validationType.touched.password && validationType.errors.password ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"password1\",\n                      type: \"password\",\n                      placeholder: \"Re-type Password\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.password1 || \"\",\n                      invalid: validationType.touched.password1 && validationType.errors.password1 ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 23\n                    }, this), validationType.touched.password1 && validationType.errors.password1 ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.password1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"E-Mail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"email\",\n                      placeholder: \"Enter Valid Email\",\n                      type: \"email\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.email || \"\",\n                      invalid: validationType.touched.email && validationType.errors.email ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 23\n                    }, this), validationType.touched.email && validationType.errors.email ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Digits\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"digits\",\n                      label: \"Digits\",\n                      placeholder: \"Enter Only Digits\",\n                      type: \"number\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.digits || \"\",\n                      invalid: validationType.touched.digits && validationType.errors.digits ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 23\n                    }, this), validationType.touched.digits && validationType.errors.digits ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.digits\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"number\",\n                      placeholder: \"Enter Only number\",\n                      type: \"number\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.number || \"\",\n                      invalid: validationType.touched.number && validationType.errors.number ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 23\n                    }, this), validationType.touched.number && validationType.errors.number ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Alphanumeric\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"alphanumeric\",\n                      placeholder: \"Enter Only alphanumeric value\",\n                      type: \"text\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.alphanumeric || \"\",\n                      invalid: validationType.touched.alphanumeric && validationType.errors.alphanumeric ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 23\n                    }, this), validationType.touched.alphanumeric && validationType.errors.alphanumeric ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.alphanumeric\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Textarea\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"textarea\",\n                      placeholder: \"\",\n                      type: \"textarea\",\n                      rows: \"5\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.textarea || \"\",\n                      invalid: validationType.touched.textarea && validationType.errors.textarea ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 682,\n                      columnNumber: 25\n                    }, this), validationType.touched.textarea && validationType.errors.textarea ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.textarea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 27\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 700,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      className: \"\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"Range validation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  className: \"custom-validation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Min Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"min_Length\",\n                      label: \"Min Length  \",\n                      placeholder: \"Min 6 chars\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.min_Length || \"\",\n                      invalid: rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.min_Length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Max Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 748,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_Length\",\n                      placeholder: \"Max 6 chars\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_Length || \"\",\n                      invalid: rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_Length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Min Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"min_Value\",\n                      placeholder: \"Min 6 Chars\",\n                      min: 6,\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.min_Value || \"\",\n                      invalid: rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.min_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Max Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 783,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_Value\",\n                      placeholder: \"max 5 Chars\",\n                      max: 6,\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_Value || \"\",\n                      invalid: rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 784,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Range Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 801,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"range_Value\",\n                      placeholder: \"Text between 5 - 10 chars length\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.range_Value || \"\",\n                      invalid: rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 802,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.range_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Regular Exp\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"regular_Exp\",\n                      placeholder: \"Hex. Color\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.regular_Exp || \"\",\n                      invalid: rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.regular_Exp\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 831,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 836,\n                        columnNumber: 25\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidations, \"35W18wFNPf8Wh6KpKd0XY74W/T8=\", false, function () {\n  return [useFormik, useFormik, useFormik];\n});\n\n_c = FormValidations;\nexport default FormValidations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidations\");","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/pages/Forms/FormValidations.js"],"names":["React","useState","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Yup","useFormik","Breadcrumbs","FormValidations","props","validation","enableReinitialize","initialValues","firstname","lastname","city","state","zip","validationSchema","object","string","required","onSubmit","values","console","log","validationType","username","password","password1","email","digits","number","alphanumeric","textarea","shape","when","is","val","length","then","oneOf","ref","max","url","matches","rangeValidation","min_Length","max_Length","min_Value","max_Value","range_Value","regular_Exp","min","test","fnm","setfnm","lnm","setlnm","unm","setunm","setcity","stateV","setstateV","handleSubmit","e","preventDefault","document","getElementById","value","classList","add","d1","getElementsByName","i","style","display","changeHandeler","event","eleId","target","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  FormGroup,\n  Button,\n  Label,\n  Input,\n  Container,\n  FormFeedback,\n  Form,\n} from \"reactstrap\";\n// Formik validation\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\n\nconst FormValidations = (props) => {\n\n  // Form validation \n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      city: '',\n      state: '',\n      zip: '',\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().required(\"Please Enter Your First Name\"),\n      lastname: Yup.string().required(\"Please Enter Your Last Name\"),\n      city: Yup.string().required(\"Please Enter Your City\"),\n      state: Yup.string().required(\"Please Enter Your State\"),\n      zip: Yup.string().required(\"Please Enter Your Zip\"),\n    }),\n    onSubmit: (values) => {\n      console.log(\"values\", values);\n    }\n  });\n\n  // Form validation \n  const validationType = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      username: '',\n      password: '',\n      password1: '',\n      email: '',\n      digits: '',\n      number: '',\n      alphanumeric: '',\n      textarea:''\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required(\n        \"This value is required\"\n      ),\n      password: Yup.string().required(\n        \"This value is required\"\n      ),\n      password1: Yup.string().when(\"password\", {\n        is: val => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n      email: Yup.string()\n        .email(\"Must be a valid Email\")\n        .max(255)\n        .required(\"Email is required\"),\n      url: Yup.string()\n        .matches(\n          /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n          \"Enter correct url!\"\n        )\n        .required(\"Please enter correct Url\"),\n      digits: Yup.number().required(\n        \"Please Enter Your Digits\"\n      ),\n      number: Yup.number().required(\n        \"Please Enter Your Number\"\n      ),\n      alphanumeric: Yup.string()\n        .matches(\n          /^[a-z0-9]+$/i,\n          \"Enter correct Alphanumeric!\"\n        )\n        .required(\"Please Enter Your Alphanumeric\"),\n      textarea: Yup.string().required(\n        \"Please Enter Your Textarea\"\n      ),\n    }),\n    onSubmit: (values) => {\n      console.log(\"values\", values);\n    }\n  });\n  // const regExp = /\\b\\d{5}\\b/;\n  // Form validation \n  const rangeValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n\n    initialValues: {\n      min_Length: '',\n      max_Length: '',\n      min_Value: '',\n      max_Value: '',\n      range_Value: '',\n      regular_Exp: '',\n    },\n    validationSchema: Yup.object().shape({\n      min_Length: Yup.string()\n        .min(6, \"Must be exactly 6 digits\")\n        .required(\"Min 6 chars\"),\n      max_Length: Yup.string()\n        .max(6, \"Must be exactly 6 digits\")\n        .required(\"Max 6 chars\"),\n      min_Value: Yup.string().required(\"Min Value 6\").test('val', 'This value should be greater than or equal to 6', val => val >= 6),\n      max_Value: Yup.string().required(\"Max Value 6\").matches(/^[0-6]+$/, \"This value should be lower than or equal to 6.\"),\n      range_Value: Yup.string().required(\n        \"range between 5 to 10\"\n      ).min(5, \"This value should be between 5 and 10\")\n        .max(10, \"This value should be between 5 and 10\"),\n      regular_Exp: Yup.string()\n        .matches(\n          /^[#0-9]+$/,\n          \"Only Hex Value\"\n        )\n        .required(\"Only Hex Value\"),\n    }),\n    onSubmit: (values) => {\n      console.log(\"values\", values);\n    }\n  });\n\n  const [fnm, setfnm] = useState(false)\n  const [lnm, setlnm] = useState(false)\n  const [unm, setunm] = useState(false)\n  const [city, setcity] = useState(false)\n  const [stateV, setstateV] = useState(false)\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    var fnm = document.getElementById(\"validationTooltip01\").value\n    var lnm = document.getElementById(\"validationTooltip02\").value\n    var unm = document.getElementById(\"validationTooltipUsername\").value\n    var city = document.getElementById(\"validationTooltip03\").value\n    var stateV = document.getElementById(\"validationTooltip04\").value\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\");\n\n    if (fnm === \"\") {\n      setfnm(false)\n    } else {\n      setfnm(true)\n    }\n\n    if (lnm === \"\") {\n      setlnm(false)\n    } else {\n      setlnm(true)\n    }\n\n    if (unm === \"\") {\n      setunm(false)\n    } else {\n      setunm(true)\n    }\n\n    if (city === \"\") {\n      setcity(false)\n    } else {\n      setcity(true)\n    }\n\n    if (stateV === \"\") {\n      setstateV(false)\n    } else {\n      setstateV(true)\n    }\n\n    var d1 = document.getElementsByName(\"validate\")\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\"\n    }\n  }\n\n    //for change tooltip display propery\n    function changeHandeler(event, eleId) {\n      if (event.target.value !== \"\"){\n        document.getElementById(eleId).style.display = \"none\"\n      }\n      else{\n        document.getElementById(eleId).style.display = \"block\"\n      }\n    }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid={true}>\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Form Validation\" />\n          <Row>\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">React Validation - Normal</h4>\n                  <p className=\"card-title-desc\">\n                    Provide valuable, actionable feedback to your users with\n                    HTML5 form validation–available in all our supported\n                    browsers.\n                  </p>\n                  <Form className=\"needs-validation\"\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      validation.handleSubmit();\n                      return false;\n                    }}\n                  >\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\n                          <Input\n                            name=\"firstname\"\n                            placeholder=\"First name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationCustom01\"\n                            onChange={validation.handleChange}\n                            onBlur={validation.handleBlur}\n                            value={validation.values.firstname || \"\"}\n                            invalid={\n                              validation.touched.firstname && validation.errors.firstname ? true : false\n                            }\n                          />\n                          {validation.touched.firstname && validation.errors.firstname ? (\n                            <FormFeedback type=\"invalid\">{validation.errors.firstname}</FormFeedback>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\n                          <Input\n                            name=\"lastname\"\n                            placeholder=\"Last name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationCustom02\"\n                            onChange={validation.handleChange}\n                            onBlur={validation.handleBlur}\n                            value={validation.values.lastname || \"\"}\n                            invalid={\n                              validation.touched.lastname && validation.errors.lastname ? true : false\n                            }\n                          />\n                          {validation.touched.lastname && validation.errors.lastname ? (\n                            <FormFeedback type=\"invalid\">{validation.errors.lastname}</FormFeedback>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"4\">\n                        <FormGroup className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom03\">City</Label>\n                          <Input\n                            name=\"city\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={validation.handleChange}\n                            onBlur={validation.handleBlur}\n                            value={validation.values.city || \"\"}\n                            invalid={\n                              validation.touched.city && validation.errors.city ? true : false\n                            }\n                          />\n                          {validation.touched.city && validation.errors.city ? (\n                            <FormFeedback type=\"invalid\">{validation.errors.city}</FormFeedback>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"4\">\n                        <FormGroup className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom04\">State</Label>\n                          <Input\n                            name=\"state\"\n                            placeholder=\"State\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationCustom04\"\n                            onChange={validation.handleChange}\n                            onBlur={validation.handleBlur}\n                            value={validation.values.state || \"\"}\n                            invalid={\n                              validation.touched.state && validation.errors.state ? true : false\n                            }\n                          />\n                          {validation.touched.state && validation.errors.state ? (\n                            <FormFeedback type=\"invalid\">{validation.errors.state}</FormFeedback>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"4\">\n                        <FormGroup className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom05\">Zip</Label>\n                          <Input\n                            name=\"zip\"\n                            placeholder=\"Zip Code\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationCustom05\"\n                            onChange={validation.handleChange}\n                            onBlur={validation.handleBlur}\n                            value={validation.values.zip || \"\"}\n                            invalid={\n                              validation.touched.zip && validation.errors.zip ? true : false\n                            }\n                          />\n                          {validation.touched.zip && validation.errors.zip ? (\n                            <FormFeedback type=\"invalid\">{validation.errors.zip}</FormFeedback>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col lg=\"12\">\n                        <FormGroup className=\"mb-3\">\n                          <div className=\"form-check\">\n                            <Input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              id=\"invalidCheck\"\n                            />\n                            <Label\n                              className=\"form-check-label\"\n                              htmlFor=\"invalidCheck\"\n                            >\n                              {\" \"}\n                              Agree to terms and conditions\n                            </Label>\n                          </div>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">React Validation (Tooltips)</h4>\n                  <p className=\"card-title-desc\">\n                    If your form layout allows it, you can swap the\n                    <code>.{\"{valid | invalid-}\"}feedback</code> classes for\n                    <code>.{\"{valid | invalid-}\"}-tooltip</code> classes to\n                    display validation feedback in a styled tooltip.\n                  </p>\n                  <form\n                    className=\"needs-validation\"\n                    method=\"post\"\n                    id=\"tooltipForm\"\n                    onSubmit={e => {\n                      handleSubmit(e)\n                    }}\n                  >\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip01\">\n                            First name\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip01\"\n                            placeholder=\"First name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate1\")\n                            }\n                          />\n\n                          <div\n                            className={\n                              fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate1\"\n                          >\n                            {fnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid First Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip02\">Last name</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip02\"\n                            placeholder=\"Last name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate2\")\n                            }\n                          />\n                          <div\n                            className={\n                              lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate2\"\n                          >\n                            {lnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid Last Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltipUsername\">\n                            Username\n                          </Label>\n                          <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                              <span\n                                className=\"input-group-text\"\n                                id=\"validationTooltipUsernamePrepend\"\n                              >\n                                @\n                              </span>\n                            </div>\n                            <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"validationTooltipUsername\"\n                              placeholder=\"Username\"\n                              onChange={event =>\n                                changeHandeler(event, \"validate3\")\n                              }\n                            />\n                            <div\n                              className={\n                                unm === true\n                                  ? \"valid-tooltip\"\n                                  : \"invalid-tooltip\"\n                              }\n                              name=\"validate\"\n                              id=\"validate3\"\n                            >\n                              {unm === true\n                                ? \"Looks good!\"\n                                : \"Please choose a unique and valid username.\"}\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip03\">City</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip03\"\n                            placeholder=\"City\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate4\")\n                            }\n                          />\n                          <div\n                            className={\n                              city === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate4\"\n                          >\n                            {city === true\n                              ? \"Looks good!\"\n                              : \"Please choose a unique and valid username.Please provide a valid city.\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip04\">State</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip04\"\n                            placeholder=\"State\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate5\")\n                            }\n                          />\n                          <div\n                            className={\n                              stateV === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate5\"\n                          >\n                            {stateV === true\n                              ? \"Looks good!\"\n                              : \"Please provide a valid state.\"}\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">Validation type</h4>\n                  <p className=\"card-title-desc\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </p>\n\n                  <Form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      validationType.handleSubmit();\n                      return false;\n                    }} className=\"custom-validation\">\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Required</Label>\n                      <Input\n                        name=\"username\"\n                        placeholder=\"Type Something\"\n                        type=\"text\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.username || \"\"}\n                        invalid={\n                          validationType.touched.username && validationType.errors.username ? true : false\n                        }\n                      />\n                      {validationType.touched.username && validationType.errors.username ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.username}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label>Equal To</Label>\n                      <Input\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.password || \"\"}\n                        invalid={\n                          validationType.touched.password && validationType.errors.password ? true : false\n                        }\n                      />\n                      {validationType.touched.password && validationType.errors.password ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.password}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Input\n                        name=\"password1\"\n                        type=\"password\"\n                        placeholder=\"Re-type Password\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.password1 || \"\"}\n                        invalid={\n                          validationType.touched.password1 && validationType.errors.password1 ? true : false\n                        }\n                      />\n                      {validationType.touched.password1 && validationType.errors.password1 ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.password1}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">E-Mail</Label>\n                      <Input\n                        name=\"email\"\n                        placeholder=\"Enter Valid Email\"\n                        type=\"email\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.email || \"\"}\n                        invalid={\n                          validationType.touched.email && validationType.errors.email ? true : false\n                        }\n                      />\n                      {validationType.touched.email && validationType.errors.email ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.email}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Digits</Label>\n                      <Input\n                        name=\"digits\"\n                        label=\"Digits\"\n                        placeholder=\"Enter Only Digits\"\n                        type=\"number\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.digits || \"\"}\n                        invalid={\n                          validationType.touched.digits && validationType.errors.digits ? true : false\n                        }\n                      />\n                      {validationType.touched.digits && validationType.errors.digits ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.digits}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Number</Label>\n                      <Input\n                        name=\"number\"\n                        placeholder=\"Enter Only number\"\n                        type=\"number\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.number || \"\"}\n                        invalid={\n                          validationType.touched.number && validationType.errors.number ? true : false\n                        }\n                      />\n                      {validationType.touched.number && validationType.errors.number ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.number}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Alphanumeric</Label>\n                      <Input\n                        name=\"alphanumeric\"\n                        placeholder=\"Enter Only alphanumeric value\"\n                        type=\"text\"\n                        onChange={validationType.handleChange}\n                        onBlur={validationType.handleBlur}\n                        value={validationType.values.alphanumeric || \"\"}\n                        invalid={\n                          validationType.touched.alphanumeric && validationType.errors.alphanumeric ? true : false\n                        }\n                      />\n                      {validationType.touched.alphanumeric && validationType.errors.alphanumeric ? (\n                        <FormFeedback type=\"invalid\">{validationType.errors.alphanumeric}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Textarea</Label>\n                        <Input\n                          name=\"textarea\"\n                          placeholder=\"\"\n                          type=\"textarea\"\n                          rows=\"5\"\n                          onChange={validationType.handleChange}\n                          onBlur={validationType.handleBlur}\n                          value={validationType.values.textarea || \"\"}\n                          invalid={\n                            validationType.touched.textarea && validationType.errors.textarea ? true : false\n                          }\n                        />\n                        {validationType.touched.textarea && validationType.errors.textarea ? (\n                          <FormFeedback type=\"invalid\">{validationType.errors.textarea}</FormFeedback>\n                        ) : null}\n                    </div>\n\n                    <div className=\"d-flex flex-wrap gap-2\">\n                      <Button type=\"submit\" color=\"primary\" className=\"\">\n                        Submit\n                      </Button>{\" \"}\n                      <Button type=\"reset\" color=\"secondary\" className=\"\">\n                        Cancel\n                      </Button>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">Range validation</h4>\n                  <p className=\"card-title-desc\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </p>\n\n                  <Form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      rangeValidation.handleSubmit();\n                      return false;\n                    }} className=\"custom-validation\"\n                  >\n                    <div className=\"mb-3\">\n                      <Label>Min Length</Label>\n                      <Input\n                        name=\"min_Length\"\n                        label=\"Min Length  \"\n                        placeholder=\"Min 6 chars\"\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.min_Length || \"\"}\n                        invalid={\n                          rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.min_Length}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label>Max Length</Label>\n                      <Input\n                        name=\"max_Length\"\n                        placeholder=\"Max 6 chars\"\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.max_Length || \"\"}\n                        invalid={\n                          rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_Length}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Min Value</Label>\n                      <Input\n                        name=\"min_Value\"\n                        placeholder=\"Min 6 Chars\"\n                        min={6}\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.min_Value || \"\"}\n                        invalid={\n                          rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.min_Value}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Max Value</Label>\n                      <Input\n                        name=\"max_Value\"\n                        placeholder=\"max 5 Chars\"\n                        max={6}\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.max_Value || \"\"}\n                        invalid={\n                          rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_Value}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Range Length</Label>\n                      <Input\n                        name=\"range_Value\"\n                        placeholder=\"Text between 5 - 10 chars length\"\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.range_Value || \"\"}\n                        invalid={\n                          rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.range_Value}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div className=\"mb-3\">\n                      <Label className=\"form-label\">Regular Exp</Label>\n                      <Input\n                        name=\"regular_Exp\"\n                        placeholder=\"Hex. Color\"\n                        type=\"number\"\n                        onChange={rangeValidation.handleChange}\n                        onBlur={rangeValidation.handleBlur}\n                        value={rangeValidation.values.regular_Exp || \"\"}\n                        invalid={\n                          rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? true : false\n                        }\n                      />\n                      {rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? (\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.regular_Exp}</FormFeedback>\n                      ) : null}\n                    </div>\n                    <div>\n                      <div>\n                        <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\n                          Submit\n                        </Button>{\" \"}\n                        <Button type=\"reset\" color=\"secondary\">\n                          Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FormValidations;\n"]},"metadata":{},"sourceType":"module"}