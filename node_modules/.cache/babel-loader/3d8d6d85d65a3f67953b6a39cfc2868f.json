{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Ecommerce Redux States\n\nimport { GET_CART_DATA, GET_CUSTOMERS, GET_ORDERS, GET_PRODUCT_DETAIL, GET_PRODUCTS, GET_SHOPS, ADD_NEW_ORDER, DELETE_ORDER, UPDATE_ORDER, ADD_NEW_CUSTOMER, DELETE_CUSTOMER, UPDATE_CUSTOMER } from \"./actionTypes\";\nimport { getCartDataFail, getCartDataSuccess, getCustomersFail, getCustomersSuccess, getOrdersFail, getOrdersSuccess, getProductDetailFail, getProductDetailSuccess, getProductsFail, getProductsSuccess, getShopsFail, getShopsSuccess, addOrderFail, addOrderSuccess, updateOrderSuccess, updateOrderFail, deleteOrderSuccess, deleteOrderFail, addCustomerFail, addCustomerSuccess, updateCustomerSuccess, updateCustomerFail, deleteCustomerSuccess, deleteCustomerFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getCartData, getCustomers, getOrders, getProducts, getShops, getProductDetail, addNewOrder, updateOrder, deleteOrder, addNewCustomer, updateCustomer, deleteCustomer } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsFail(error));\n  }\n}\n\nfunction* fetchProductDetail(_ref) {\n  let {\n    productId\n  } = _ref;\n\n  try {\n    const response = yield call(getProductDetail, productId);\n    yield put(getProductDetailSuccess(response));\n  } catch (error) {\n    yield put(getProductDetailFail(error));\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders);\n    yield put(getOrdersSuccess(response));\n  } catch (error) {\n    yield put(getOrdersFail(error));\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData);\n    yield put(getCartDataSuccess(response));\n  } catch (error) {\n    yield put(getCartDataFail(error));\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers);\n    yield put(getCustomersSuccess(response));\n  } catch (error) {\n    yield put(getCustomersFail(error));\n  }\n}\n\nfunction* onUpdateCustomer(_ref2) {\n  let {\n    payload: customer\n  } = _ref2;\n\n  try {\n    const response = yield call(updateCustomer, customer);\n    yield put(updateCustomerSuccess(response));\n  } catch (error) {\n    yield put(updateCustomerFail(error));\n  }\n}\n\nfunction* onDeleteCustomer(_ref3) {\n  let {\n    payload: customer\n  } = _ref3;\n\n  try {\n    const response = yield call(deleteCustomer, customer);\n    yield put(deleteCustomerSuccess(response));\n  } catch (error) {\n    yield put(deleteCustomerFail(error));\n  }\n}\n\nfunction* onAddNewCustomer(_ref4) {\n  let {\n    payload: customer\n  } = _ref4;\n\n  try {\n    const response = yield call(addNewCustomer, customer);\n    yield put(addCustomerSuccess(response));\n  } catch (error) {\n    yield put(addCustomerFail(error));\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops);\n    yield put(getShopsSuccess(response));\n  } catch (error) {\n    yield put(getShopsFail(error));\n  }\n}\n\nfunction* onUpdateOrder(_ref5) {\n  let {\n    payload: order\n  } = _ref5;\n\n  try {\n    const response = yield call(updateOrder, order);\n    yield put(updateOrderSuccess(response));\n  } catch (error) {\n    yield put(updateOrderFail(error));\n  }\n}\n\nfunction* onDeleteOrder(_ref6) {\n  let {\n    payload: order\n  } = _ref6;\n\n  try {\n    const response = yield call(deleteOrder, order);\n    yield put(deleteOrderSuccess(response));\n  } catch (error) {\n    yield put(deleteOrderFail(error));\n  }\n}\n\nfunction* onAddNewOrder(_ref7) {\n  let {\n    payload: order\n  } = _ref7;\n\n  try {\n    const response = yield call(addNewOrder, order);\n    yield put(addOrderSuccess(response));\n  } catch (error) {\n    yield put(addOrderFail(error));\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts);\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail);\n  yield takeEvery(GET_ORDERS, fetchOrders);\n  yield takeEvery(GET_CART_DATA, fetchCartData);\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers);\n  yield takeEvery(ADD_NEW_CUSTOMER, onAddNewCustomer);\n  yield takeEvery(UPDATE_CUSTOMER, onUpdateCustomer);\n  yield takeEvery(DELETE_CUSTOMER, onDeleteCustomer);\n  yield takeEvery(GET_SHOPS, fetchShops);\n  yield takeEvery(ADD_NEW_ORDER, onAddNewOrder);\n  yield takeEvery(UPDATE_ORDER, onUpdateOrder);\n  yield takeEvery(DELETE_ORDER, onDeleteOrder);\n}\n\nexport default ecommerceSaga;","map":{"version":3,"sources":["/home/happy/Downloads/main-main/src/store/e-commerce/saga.js"],"names":["call","put","takeEvery","GET_CART_DATA","GET_CUSTOMERS","GET_ORDERS","GET_PRODUCT_DETAIL","GET_PRODUCTS","GET_SHOPS","ADD_NEW_ORDER","DELETE_ORDER","UPDATE_ORDER","ADD_NEW_CUSTOMER","DELETE_CUSTOMER","UPDATE_CUSTOMER","getCartDataFail","getCartDataSuccess","getCustomersFail","getCustomersSuccess","getOrdersFail","getOrdersSuccess","getProductDetailFail","getProductDetailSuccess","getProductsFail","getProductsSuccess","getShopsFail","getShopsSuccess","addOrderFail","addOrderSuccess","updateOrderSuccess","updateOrderFail","deleteOrderSuccess","deleteOrderFail","addCustomerFail","addCustomerSuccess","updateCustomerSuccess","updateCustomerFail","deleteCustomerSuccess","deleteCustomerFail","getCartData","getCustomers","getOrders","getProducts","getShops","getProductDetail","addNewOrder","updateOrder","deleteOrder","addNewCustomer","updateCustomer","deleteCustomer","fetchProducts","response","error","fetchProductDetail","productId","fetchOrders","fetchCartData","fetchCustomers","onUpdateCustomer","payload","customer","onDeleteCustomer","onAddNewCustomer","fetchShops","onUpdateOrder","order","onDeleteOrder","onAddNewOrder","ecommerceSaga"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Ecommerce Redux States\nimport {\n  GET_CART_DATA,\n  GET_CUSTOMERS,\n  GET_ORDERS,\n  GET_PRODUCT_DETAIL,\n  GET_PRODUCTS,\n  GET_SHOPS,\n  ADD_NEW_ORDER,\n  DELETE_ORDER,\n  UPDATE_ORDER,\n  ADD_NEW_CUSTOMER,\n  DELETE_CUSTOMER,\n  UPDATE_CUSTOMER,\n} from \"./actionTypes\"\nimport {\n  getCartDataFail,\n  getCartDataSuccess,\n  getCustomersFail,\n  getCustomersSuccess,\n  getOrdersFail,\n  getOrdersSuccess,\n  getProductDetailFail,\n  getProductDetailSuccess,\n  getProductsFail,\n  getProductsSuccess,\n  getShopsFail,\n  getShopsSuccess,\n  addOrderFail,\n  addOrderSuccess,\n  updateOrderSuccess,\n  updateOrderFail,\n  deleteOrderSuccess,\n  deleteOrderFail,\n  addCustomerFail,\n  addCustomerSuccess,\n  updateCustomerSuccess,\n  updateCustomerFail,\n  deleteCustomerSuccess,\n  deleteCustomerFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getCartData,\n  getCustomers,\n  getOrders,\n  getProducts,\n  getShops,\n  getProductDetail,\n  addNewOrder,\n  updateOrder,\n  deleteOrder,\n  addNewCustomer,\n  updateCustomer,\n  deleteCustomer,\n} from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts)\n    yield put(getProductsSuccess(response))\n  } catch (error) {\n    yield put(getProductsFail(error))\n  }\n}\n\nfunction* fetchProductDetail({ productId }) {\n  try {\n    const response = yield call(getProductDetail, productId)\n    yield put(getProductDetailSuccess(response))\n  } catch (error) {\n    yield put(getProductDetailFail(error))\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders)\n    yield put(getOrdersSuccess(response))\n  } catch (error) {\n    yield put(getOrdersFail(error))\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData)\n    yield put(getCartDataSuccess(response))\n  } catch (error) {\n    yield put(getCartDataFail(error))\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers)\n    yield put(getCustomersSuccess(response))\n  } catch (error) {\n    yield put(getCustomersFail(error))\n  }\n}\n\nfunction* onUpdateCustomer({ payload: customer }) {\n  try {\n    const response = yield call(updateCustomer, customer);\n    yield put(updateCustomerSuccess(response));\n  } catch (error) {\n    yield put(updateCustomerFail(error));\n  }\n}\n\nfunction* onDeleteCustomer({ payload: customer }) {\n  try {\n    const response = yield call(deleteCustomer, customer);\n    yield put(deleteCustomerSuccess(response));\n  } catch (error) {\n    yield put(deleteCustomerFail(error));\n  }\n}\n\nfunction* onAddNewCustomer({ payload: customer }) {\n  try {\n    const response = yield call(addNewCustomer, customer);\n\n    yield put(addCustomerSuccess(response));\n  } catch (error) {\n    yield put(addCustomerFail(error));\n  }\n}\n\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops)\n    yield put(getShopsSuccess(response))\n  } catch (error) {\n    yield put(getShopsFail(error))\n  }\n}\n\nfunction* onUpdateOrder({ payload: order }) {\n  try {\n    const response = yield call(updateOrder, order);\n    yield put(updateOrderSuccess(response));\n  } catch (error) {\n    yield put(updateOrderFail(error));\n  }\n}\n\nfunction* onDeleteOrder({ payload: order }) {\n  try {\n    const response = yield call(deleteOrder, order);\n    yield put(deleteOrderSuccess(response));\n  } catch (error) {\n    yield put(deleteOrderFail(error));\n  }\n}\n\nfunction* onAddNewOrder({ payload: order }) {\n  try {\n    const response = yield call(addNewOrder, order);\n    yield put(addOrderSuccess(response));\n  } catch (error) {\n    yield put(addOrderFail(error));\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts)\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail)\n  yield takeEvery(GET_ORDERS, fetchOrders)\n  yield takeEvery(GET_CART_DATA, fetchCartData)\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers)\n  yield takeEvery(ADD_NEW_CUSTOMER, onAddNewCustomer);\n  yield takeEvery(UPDATE_CUSTOMER, onUpdateCustomer);\n  yield takeEvery(DELETE_CUSTOMER, onDeleteCustomer);\n  yield takeEvery(GET_SHOPS, fetchShops)\n  yield takeEvery(ADD_NEW_ORDER, onAddNewOrder);\n  yield takeEvery(UPDATE_ORDER, onUpdateOrder);\n  yield takeEvery(DELETE_ORDER, onDeleteOrder);\n}\n\nexport default ecommerceSaga\n"]},"metadata":{},"sourceType":"module"}